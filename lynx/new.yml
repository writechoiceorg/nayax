openapi: 3.0.1
info:
  title: Nayax Operational Lynx API
  version: v1
servers:
- url: "/Operational"
security:
- Authorization: []
paths:
  /v1/actors/{ActorID}:
    get:
      summary: Get Actor Details by ActorID
      operationId: get-actor-by-actorid
      tags:
      - Actors
      description: This endpoint retrieves comprehensive information about a single actor. You must specify the actor's unique identifier, `ActorID`, in the request path to obtain their full profile, including attributes.
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor whose details are to be retrieved.
          schema:
            type: string
      responses:
        '200':
          description: Actor details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Actors"
    put:
      tags:
        - Actors
      summary: Update Operator/Sub-Operator
      operationId: update-actor
      description: Updates the details of an existing actor (operator or sub-operator) identified by `ActorID`. The request body must contain the updated attributes for the actor.
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor to be updated.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorsDbEntity'
      responses:
        '200':
          description: Actor updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actors'
        '404':
          description: Actor not found.
        '400':
          description: Invalid input provided.
  /v1/actors:
    get:
      tags:
        - Actors
      summary: Get Actor by ActorCode
      operationId: get-actor-by-actorcode
      description: Retrieves the details of an actor using their unique `ActorCode`. This is useful for fetching information about a specific actor when only their code is known.
      parameters:
        - name: ActorCode
          in: query
          schema:
            type: integer
            format: int64
          required: true
          description: The unique code assigned to the actor. This code is used to identify and retrieve the actor's details.
      responses:
        '200':
          description: Actor details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actors'
  /v1/actors/{ParentActorID}:
    post:
      tags:
        - Actors
      summary: Create a New Actor
      operationId: create-new-actor
      description: Creates a new actor under the specified parent actor. The parent actor is identified by the `ParentActorID` provided in the path. The request body must contain the details of the new actor.
      parameters:
        - name: ParentActorID
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The unique identifier of the parent actor under which the new actor will be created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorsDbEntity'
      responses:
        '200':
          description: Actor created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actors'
  /v2/actors/{ParentActorID}:
    post:
      tags:
        - Actors
      summary: Create a New Actor
      operationId: create-new-actor-v2
      description: Creates a new actor under the specified parent actor. The parent actor is identified by the `ParentActorID` provided in the path. The request body must contain the details of the new actor.
      parameters:
        - name: ParentActorID
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The unique identifier of the parent actor under which the new actor will be created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorCreateRequest'
      responses:
        '200':
          description: Actor created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorCreateResponse'
  /v1/actors/{ActorID}/paymentMethods:
    get:
      tags:
        - Actors
      summary: Get payment methods by ActorID
      operationId: get-payment-methods-by-actorid
      description: Retrieves a list of payment methods associated with a specific actor, identified by the `ActorID`.
      parameters:
        - name: ActorID
          in: path
          description: The unique identifier of the actor whose payment methods are being requested.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A list of payment methods associated with the actor was retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorPaymentResponse'
    put:
      tags:
        - Actors
      summary: Update Actor's Payment Methods
      description: Updates the payment methods associated with a specific actor, identified by the `ActorID`.
      operationId: update-actor-payment-methods
      parameters:
        - name: ActorID
          in: path
          description: The unique identifier of the actor whose payment methods are being updated.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The payment methods to be updated.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorPaymentResponse'
      responses:
        '200':
          description: The payment methods were updated successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorPaymentResponse'
    post:
      tags:
        - Actors
      summary: Create Actor's Payment Methods
      description: Creates new payment methods for a specific actor, identified by the `ActorID`.
      operationId: create-actor-payment-methods
      parameters:
        - name: ActorID
          in: path
          description: The unique identifier of the actor for whom the payment methods are being created.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The payment methods to be created.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorPaymentResponse'
      responses:
        '200':
          description: The payment methods were created successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorPaymentResponse'
  /v1/actors/{ActorID}/paymentMethods/{paymentMethodID}:
    delete:
      tags:
        - Actors
      summary: Delete a Payment Method
      description: Deletes a specific payment method associated with a given actor, identified by `ActorID` and `paymentMethodID`.
      operationId: delete-actor-payment-method
      parameters:
        - name: ActorID
          in: path
          description: The unique identifier of the actor whose payment method is being deleted.
          required: true
          schema:
            type: integer
            format: int64
        - name: paymentMethodID
          in: path
          description: The unique identifier of the payment method to be deleted.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The payment method was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
  /v1/actors/{ActorID}/evDashboard:
    get:
      tags:
        - Actors
      summary: Get Operator EV Meter Dashboard
      description: Retrieves the EV meter dashboard for a specific operator, identified by `ActorID`. Optional query parameters allow filtering by date range, machine ID, time period, and machine number.
      operationId: get-operator-ev-meter-dashboard
      parameters:
        - name: ActorID
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The unique identifier of the actor (operator) for whom the EV meter dashboard is being retrieved.
        - name: StartDate
          in: query
          schema:
            type: string
            format: date-time
          description: The start date for filtering the EV meter dashboard data.
        - name: EndDate
          in: query
          schema:
            type: string
            format: date-time
          description: The end date for filtering the EV meter dashboard data.
        - name: MachineID
          in: query
          schema:
            type: integer
            format: int64
          description: The unique identifier of the machine for which the EV meter data is being retrieved.
        - name: TimePeriod
          in: query
          schema:
            type: integer
            format: int32
          description: The time period for which the EV meter data is being retrieved.
        - name: MachineNumber
          in: query
          schema:
            type: string
          description: The number of the machine for which the EV meter data is being retrieved.
      responses:
        '200':
          description: The EV meter dashboard data was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvMeterDashBoard'
  /v1/actors/GetEncKeys:
    get:
      tags:
        - Actors
      summary: Get Encryption Keys by ActorID
      description: Retrieves the encryption keys associated with a specific actor, identified by the `actorID` query parameter.
      operationId: get-encryption-keys-by-actor-id
      parameters:
        - name: actorID
          in: query
          description: The unique identifier of the actor for whom encryption keys are being retrieved.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Encryption keys retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DispatchActorEncKeysDbEntity'
  /v1/actors/hierarchy:
    get:
      tags:
        - Actors
      summary: Get Actor Hierarchy for Current User
      description: Retrieves the actor hierarchy for the current user. Optionally, you can specify an `ActorID` to get the hierarchy for a specific actor, filter by `StatusID`, or limit the hierarchy levels returned.
      operationId: get-actor-hierarchy
      parameters:
        - name: ActorID
          in: query
          description: Specify the unique identifier of an actor to retrieve its hierarchy instead of the current user's hierarchy.
          schema:
            type: integer
            format: int64
        - name: StatusID
          in: query
          description: Filter the hierarchy to only include actors with a specific status identifier.
          schema:
            type: integer
            format: int32
        - name: HierarchyLevelLimit
          in: query
          description: The maximum number of hierarchy levels to retrieve.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The actor hierarchy was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorHirarchyDto'
  /v1/actors/GenarateEncKey:
    put:
      tags:
        - Actors
      summary: Generate Encryption Key
      description: Generates a new encryption key for the specified actor, identified by `actorID`.
      operationId: generate-encryption-key
      parameters:
        - name: actorID
          in: query
          description: The unique identifier of the actor for whom the encryption key is being generated.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Encryption key generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchActorEncKeysDbEntity'
  /v1/actors/DecryptionMessageByVer:
    put:
      tags:
        - Actors
      summary: Decrypt message by encryption version
      description: Decrypts a message using a specific encryption version for a given actor, identified by `actorID` and `encVer`.
      operationId: decrypt-message-by-encryption-version
      parameters:
        - name: actorID
          in: query
          description: The unique identifier of the actor whose message is being decrypted.
          schema:
            type: integer
            format: int64
        - name: encVer
          in: query
          description: The version of the encryption used to decrypt the message.
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        description: The encrypted message to be decrypted.
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: The message was decrypted successfully.
          content:
            application/json:
              schema:
                type: boolean
  /v1/actor/{ActorID}/machineGroups:
    get:
      tags:
        - Actors
      summary: List All Machine Groups for Actor
      description: Retrieves all machine groups associated with a specific actor, identified by `ActorID`.
      operationId: get-all-machine-groups-for-actor
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the machine groups are being retrieved.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A list of machine groups associated with the actor was retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MachineGroupResponseDTO'
    post:
      tags:
        - Actors
      summary: Add Machine Group
      description: Adds a new machine group for a specific actor, identified by `ActorID`.
      operationId: add-machine-group
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the machine group is being added.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The details of the machine group to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineGroupRequestDTO'
      responses:
        '200':
          description: The machine group was added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineGroupResponseDTO'
    put:
      tags:
        - Actors
      summary: Update Machine Group
      description: Updates the details of a machine group associated with a specific actor, identified by `ActorID`.
      operationId: update-machine-group
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the machine group is being updated.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The machine group details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineGroupRequestDTO'
      responses:
        '200':
          description: The machine group was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineGroupResponseDTO'
  /v1/actors/{ActorID}/roleGroups:
    get:
      tags:
        - Actors
      summary: Get All Actor Groups by ActorID
      description: Retrieves all actor groups associated with a specific actor, identified by `ActorID`.
      operationId: get-all-actor-groups-for-actor
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the role groups are being retrieved.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A list of actor groups associated with the actor was retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorGroupResponseDTO'
    post:
      tags:
        - Actors
      summary: Add Actor Group
      description: Adds a new actor group for a specific actor, identified by `ActorID`.
      operationId: add-actor-group
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the role group is being added.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The details of the actor group to be added.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorGroupRequestDTO'
      responses:
        '200':
          description: The actor group was added successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorGroupResponseDTO'
    delete:
      tags:
        - Actors
      summary: Delete actor group
      description: Deletes an actor group associated with a specific actor, identified by `ActorID`.
      operationId: delete-actor-group
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the role group is being deleted.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The details of the actor group to be deleted.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActorGroupRequestDTO'
      responses:
        '200':
          description: The actor group was deleted successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActorGroupResponseDTO'
  /v1/actors/{ActorID}/bankInfo:
    get:
      tags:
        - BankInformation
      summary: Get Bank Information for Actor
      description: Retrieves the bank information associated with a specific actor, identified by `ActorID`.
      operationId: get-bank-information
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the bank information is being retrieved.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The bank information was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantBankInfo'
    post:
      tags:
        - BankInformation
      summary: Add Bank Information for Actor
      description: Adds new bank information for a specific actor, identified by `ActorID`.
      operationId: add-bank-information
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the bank information is being posted.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The bank information to be posted.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantBankInfo'
      responses:
        '200':
          description: The bank information was added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantBankInfo'
    put:
      tags:
        - BankInformation
      summary: Update Bank Information for Actor
      description: Updates the bank information for a specific actor, identified by `ActorID`.
      operationId: update-bank-information
      parameters:
        - name: ActorID
          in: path
          required: true
          description: The unique identifier of the actor for whom the bank information is being updated.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The bank information to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantBankInfo'
      responses:
        '200':
          description: The bank information was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantBankInfo'
  /v1/reports/{actor_id}/{start_date}/{end_date}:
    get:
      tags:
        - BillingReport
      summary: Get Report Files by ActorID and Date Range
      description: Retrieves billing report files for a specific actor within a given date range, optionally filtered by report file type.
      operationId: get-report-files-by-actor-and-date-range
      parameters:
        - name: actor_id
          in: path
          description: The unique identifier of the actor for whom the report files are being retrieved.
          required: true
          schema:
            type: integer
            format: int64
        - name: start_date
          in: path
          description: The start date of the report file range.
          required: true
          schema:
            type: string
            format: date-time
        - name: end_date
          in: path
          description: The end date of the report file range.
          required: true
          schema:
            type: string
            format: date-time
        - name: report_file_type
          in: query
          description: The type of report file to retrieve, if filtering by type.
          schema:
            type: string
      responses:
        '200':
          description: Report files retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingReportsResponse'
  /v1/cards:
    get:
      tags:
        - Cards
      summary: Get Cards
      description: Retrieves card details based on various query parameters.
      operationId: get-cards
      parameters:
        - name: CardID
          in: query
          description: The unique identifier of the card.
          schema:
            type: integer
            format: int64
        - name: CardUniqueIdentifier
          in: query
          description: The unique identifier assigned to the card.
          schema:
            type: string
        - name: CardDisplayNumber
          in: query
          description: The display number of the card.
          schema:
            type: string
        - name: CardMobileNumber
          in: query
          description: The mobile number associated with the card.
          schema:
            type: string
        - name: ExternalApplicationUserID
          in: query
          description: The external application user ID associated with the card.
          schema:
            type: string
        - name: CardEmail
          in: query
          description: The email address associated with the card.
          schema:
            type: string
        - name: CardHolderName
          in: query
          description: The name of the cardholder.
          schema:
            type: string
      responses:
        '200':
          description: Card details retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardGetDto'
    post:
      tags:
        - Cards
      summary: Create Virtual Card
      description: Creates a new virtual card with the provided details.
      operationId: create-virtual-card
      requestBody:
        required: true
        description: The details of the card to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardsWithActorId'
      responses:
        '200':
          description: The virtual card was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards'
    put:
      tags:
        - Cards
      summary: Update Card Details
      description: Updates the details of an existing card.
      operationId: update-card-detail
      requestBody:
        required: true
        description: The updated details of the card.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cards'
      responses:
        '200':
          description: The card details were updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards'
  /v1/cards/{CardUniqueIdentifier}/credit:
    get:
      tags:
        - Cards
      summary: Get the Credit from a Card
      description: Retrieves the credit value associated with a specific card, identified by its unique identifier.
      operationId: get-card-credit
      parameters:
        - name: CardUniqueIdentifier
          in: path
          required: true
          description: The unique identifier of the card for which the credit value is being retrieved.
          schema:
            type: string
      responses:
        '200':
          description: Credit value retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardValue'
  /v1/cards/uniqueIdentifier/{CardUniqueIdentifier}:
    get:
      tags:
        - Cards
      summary: Get Card by ID
      description: Retrieves card details associated with a specific unique identifier.
      operationId: get-cards-by-unique-identifier
      parameters:
        - name: CardUniqueIdentifier
          in: path
          required: true
          description: The unique identifier of the card to be retrieved.
          schema:
            type: string
      responses:
        '200':
          description: Card details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards'
  /v1/cards/{CardUniqueIdentifier}/revalue:
    get:
      tags:
        - Cards
      summary: Get the Card's Revalue
      description: Retrieves the revalue amount associated with a specific card, identified by the card's unique identifier.
      operationId: get-card-revalue
      parameters:
        - name: CardUniqueIdentifier
          in: path
          required: true
          description: The unique identifier of the card for which the revalue amount is being retrieved.
          schema:
            type: string
      responses:
        '200':
          description: Revalue amount retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardValue'
  /v1/cards/displayNumber/{CardDisplayNumber}:
    get:
      tags:
        - Cards
      summary: Get Card by the Cards Display Number
      description: Retrieves card details associated with a specific display number.
      operationId: get-cards-by-display-number
      parameters:
        - name: CardDisplayNumber
          in: path
          required: true
          description: The display number of the card to be retrieved.
          schema:
            type: string
      responses:
        '200':
          description: Card details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards'
  /v1/cards/{CardId}/prepaid:
    get:
      tags:
        - Cards
      summary: Get Prepaid Card
      description: Retrieves details of a prepaid card associated with a specific card ID.
      operationId: get-prepaid-card
      parameters:
        - name: CardId
          in: path
          required: true
          description: The unique identifier of the card to be retrieved.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Prepaid card details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidCard'
    put:
      tags:
        - Cards
      summary: Update Prepaid Card
      description: Updates the details of a prepaid card associated with a specific card ID.
      operationId: update-prepaid-card
      parameters:
        - name: CardId
          in: path
          required: true
          description: The unique identifier of the card to be updated.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The updated details of the prepaid card.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidCardDbEntity'
      responses:
        '200':
          description: Prepaid card details updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidCard'
  /v1/cards/validate-machine/{machineId}:
    get:
      tags:
        - Cards
      summary: Validates Card for Machine use
      description: Validates whether a prepaid or discount card can be used with a specific machine.
      operationId: validate-card-for-machine
      parameters:
        - name: machineId
          in: path
          required: true
          description: The unique identifier of the machine to validate the card against.
          schema:
            type: integer
            format: int64
        - name: cardId
          in: query
          description: The unique identifier of the card.
          schema:
            type: integer
            format: int64
        - name: cardUniqueIdentifier
          in: query
          description: The unique identifier of the card.
          schema:
            type: string
      responses:
        '200':
          description: Validation result retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardsMachineResponseModel'
  /v1/cards/{cardId}/cardGroups:
    get:
      tags:
        - Cards
      summary: Get Card Group
      description: Retrieves the group details associated with a specific card, identified by its card ID.
      operationId: get-card-group
      parameters:
        - name: cardId
          in: path
          required: true
          description: The unique identifier of the card for which the group details are being retrieved.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Card group details retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardGroup'
  /v1/cards/query:
    post:
      tags:
        - Cards
      summary: Get Credit Card's Latest Transactions
      description: Retrieves the latest transactions associated with a specific credit card number, identified by the SHA1 hash of the card number in base64 format.
      operationId: get-latest-transactions
      parameters:
        - name: minutes
          in: query
          description: The maximum age of transactions to retrieve, in minutes. Default is 1440 minutes (24 hours).
          schema:
            type: integer
            format: int32
            default: 1440
      requestBody:
        required: true
        description: The SHA1 hash of the credit card number in base64 format.
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Transactions retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardLastTransaction'
  /v1/cards/{CardUniqueIdentifier}/credit/add:
    post:
      tags:
        - Cards
      summary: Add Credit to a Card
      description: Adds a specified amount to the credit of a card, identified by its unique identifier.
      operationId: add-card-credit
      parameters:
        - name: CardUniqueIdentifier
          in: path
          required: true
          description: The unique identifier of the card to which the credit will be added.
          schema:
            type: string
        - name: CardCredit
          in: query
          description: The amount of credit to be added to the card.
          schema:
            type: number
            format: double
        - name: CreditChangeRemarks
          in: query
          description: Remarks or notes regarding the credit change.
          schema:
            type: string
      responses:
        '200':
          description: Credit added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardValue'
  /v1/cards/{CardUniqueIdentifier}/revalue/add:
    post:
      tags:
        - Cards
      summary: Add to the Card's Revalue
      description: Adds a specified amount to the revalue of a card, identified by its unique identifier.
      operationId: add-card-revalue
      parameters:
        - name: CardUniqueIdentifier
          in: path
          required: true
          description: The unique identifier of the card to which the revalue will be added.
          schema:
            type: string
        - name: CardCredit
          in: query
          description: The amount of credit to be added to the card's revalue.
          schema:
            type: number
            format: double
        - name: CreditChangeRemarks
          in: query
          description: Remarks or notes regarding the credit change.
          schema:
            type: string
      responses:
        '200':
          description: Revalue added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardValue'
  /v1/cards/{FromCardUniqueIdentifier}/revalue/send/{ToCardUniqueIdentifier}:
    post:
      tags:
        - Cards
      summary: Transfer Revalue Between Cards
      description: Transfers a specified amount of revalue from one card to another, identified by their unique identifiers.
      operationId: transfer-card-revalue
      parameters:
        - name: FromCardUniqueIdentifier
          in: path
          required: true
          description: The unique identifier of the card from which the revalue will be deducted.
          schema:
            type: string
        - name: ToCardUniqueIdentifier
          in: path
          required: true
          description: The unique identifier of the card to which the revalue will be added.
          schema:
            type: string
        - name: CardCredit
          in: query
          description: The amount of revalue to be transferred.
          schema:
            type: number
            format: double
        - name: CreditChangeRemarks
          in: query
          description: Remarks or notes regarding the revalue transfer.
          schema:
            type: string
      responses:
        '200':
          description: Revalue transferred successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardValue'
  /v1/cards/{CardUniqueIdentifier}/status/{CardStatus}:
    post:
      tags:
        - Cards
      summary: Update card status
      description: Updates the status of a card, identified by its unique identifier.
      operationId: update-card-status
      parameters:
        - name: CardUniqueIdentifier
          in: path
          required: true
          description: The unique identifier of the card whose status is to be updated.
          schema:
            type: string
        - name: CardStatus
          in: path
          required: true
          description: The new status to be assigned to the card.
          schema:
            $ref: '#/components/schemas/CardStatus'
      responses:
        '200':
          description: Card status updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
  /v1/cards/{CardDisplayNumber}:
    put:
      tags:
        - Cards
      summary: Update Card Details by Display Number
      description: Updates the details of a card identified by the card's display number.
      operationId: update-card-by-display-number
      parameters:
        - name: CardDisplayNumber
          in: path
          required: true
          description: The display number of the card to be updated.
          schema:
            type: string
      requestBody:
        required: true
        description: The card details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cards'
      responses:
        '200':
          description: Card details updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cards'
  /v1/cards/{CardId}/cardGroups:
    put:
      tags:
        - Cards
      summary: Update Card Groups
      description: Updates the group details associated with a card, identified by the card's unique identifier.
      operationId: update-card-groups
      parameters:
        - name: CardId
          in: path
          required: true
          description: The unique identifier of the card whose groups are to be updated.
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The card group details to be updated.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CardGroup'
      responses:
        '200':
          description: Card groups updated successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardGroup'
  /v2/cards:
    post:
      tags:
        - Cards
      summary: Create new card
      description: Creates a new card with the specified details.
      operationId: create-new-card
      requestBody:
        required: true
        description: The details of the card to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreateDto'
      responses:
        '200':
          description: Card created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardGetDto'
  /v2/cards/{CardID}:
    put:
      tags:
        - Cards
      summary: Update card by ID
      description: Updates the details of a card identified by its unique ID.
      operationId: update-card-by-id
      parameters:
        - name: CardID
          in: path
          description: The unique identifier of the card to be updated.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        description: The updated details of the card.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardUpdateDto'
      responses:
        '200':
          description: Card details updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardGetDto'
  /v1/certificates/{boardSerial}:
    get:
      tags:
        - Certificates
      summary: Get CA Certificate for Retail Terminal
      description: Retrieves the CA certificate associated with a retail terminal identified by its board serial number.
      operationId: get-ca-certificate-for-terminal
      parameters:
        - name: boardSerial
          in: path
          required: true
          description: The serial number of the board for which the CA certificate is to be retrieved.
          schema:
            type: string
      responses:
        '200':
          description: CA certificate retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
    post:
      tags:
        - Certificates
      summary: Create CA Certificate for Retail Terminal
      description: Generates and assigns a CA certificate for a retail terminal identified by its board serial number.
      operationId: create-ca-certificate-for-terminal
      parameters:
        - name: boardSerial
          in: path
          required: true
          description: The serial number of the board for which the CA certificate is to be created.
          schema:
            type: string
      responses:
        '200':
          description: CA certificate created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
  /v1/certificates/{boardSerial}/renew:
    post:
      tags:
        - Certificates
      summary: Renew CA Certificate for Retail Terminals
      description: Renews the CA certificate for a retail terminal identified by its board serial number.
      operationId: renew-ca-certificate-for-terminal
      parameters:
        - name: boardSerial
          in: path
          required: true
          description: The serial number of the board for which the CA certificate is to be renewed.
          schema:
            type: string
      responses:
        '200':
          description: CA certificate renewed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
  /v1/certificates/{boardSerial}/revoke:
    post:
      tags:
        - Certificates
      summary: Revoke CA Certificate for Retail Terminals
      description: Revokes the CA certificate for a retail terminal identified by its board serial number.
      operationId: revoke-ca-certificate-for-terminal
      parameters:
        - name: boardSerial
          in: path
          required: true
          description: The serial number of the board for which the CA certificate is to be revoked.
          schema:
            type: string
      responses:
        '200':
          description: CA certificate revoked successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
  /v1/certificates/installationStatus:
    post:
      tags:
        - Certificates
      summary: Set device installation status
      description: Updates the installation status of a device after a CA certificate has been installed.
      operationId: set-device-installation-status
      requestBody:
        required: true
        description: The installation status details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateInstallationRequest'
      responses:
        '200':
          description: Device installation status updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
  /v1/companyInfo:
    get:
      tags:
        - CompanyInfo
      summary: Get Actor Address Invoice Information
      description: Retrieves the invoice information for an actor based on specified query parameters, such as `ActorID`, `InvoiceCompanyName`, and `CompanyTaxID`.
      operationId: get-actor-invoice-info-by-params
      parameters:
        - name: ActorID
          in: query
          description: The unique identifier of the actor for which the invoice information is being requested.
          schema:
            type: integer
            format: int64
        - name: InvoiceCompanyName
          in: query
          description: The company name associated with the invoice.
          schema:
            type: string
        - name: CompanyTaxID
          in: query
          description: The tax ID of the company associated with the invoice.
          schema:
            type: string
      responses:
        '200':
          description: Invoice information retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorMerchantInfo'
  /v1/companyInfo/{ActorID}:
    post:
      tags:
      - CompanyInfo
      summary: Add Actor Address Information Invoice
      description: This endpoint allows you to add address information for an actor's invoice using the `ActorID`. The actor's unique identifier is provided in the path to ensure that the correct address information is linked to the actor's invoice.
      operationId: add-actor-address-info-by-actorid
      parameters:
      - name: ActorID
        in: path
        required: true
        description: The unique identifier of the actor whose address information is being added to the invoice.
        schema:
          type: string
      requestBody:
        description: The address information to be added for the actor's invoice.
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ActorMerchantInfo"
      responses:
        '200':
          description: The address information was successfully added to the actor's invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ActorMerchantInfo"
    put:
      tags:
      - CompanyInfo
      summary: Update Actor Address Information Invoice
      description: This endpoint allows you to update the existing address information for an actor's invoice using the `ActorID`. The actor's unique identifier is provided in the path to ensure that the correct address information is updated.
      operationId: update-actor-address-info-by-actorid
      parameters:
      - name: ActorID
        in: path
        required: true
        description: The unique identifier of the actor whose address information is being updated for the invoice.
        schema:
          type: integer
          format: int64
      requestBody:
        description: The updated address information for the actor's invoice.
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ActorMerchantInfo"
      responses:
        '200':
          description: The address information was successfully updated for the actor's invoice.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ActorMerchantInfo"
  /v1/devices/{DeviceID}:
    get:
      tags:
      - Devices
      summary: Get Device by DeviceID
      description: Retrieve detailed information about a specific device using its `DeviceID`. The unique identifier of the device is provided in the path to ensure accurate retrieval of the device's data.
      operationId: get-device-by-deviceid
      parameters:
      - name: DeviceID
        in: path
        required: true
        description: The unique identifier of the device to be retrieved.
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Device details retrieved successfully.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeviceExtra"
    put:
      tags:
      - Devices
      summary: Update Device
      description: Update the details of an existing device using its `DeviceID`. The unique identifier of the device is provided in the path to ensure that the correct device is updated.
      operationId: update-device-by-deviceid
      parameters:
      - name: DeviceID
        in: path
        required: true
        description: The unique identifier of the device to be updated.
        schema:
          type: integer
          format: int32
      requestBody:
        description: The updated details of the device.
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DevicesUpdateDto"
      responses:
        '200':
          description: Device details updated successfully.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeviceExtra"
  /v1/devices:
    get:
      tags:
      - Devices
      summary: Get All Devices
      description: Retrieve a list of devices with optional filters such as actor ID, connection status, serial number, and other device attributes.
      operationId: get-devices
      parameters:
      - name: ActorId
        in: query
        description: The unique identifier of the actor associated with the devices.
        schema:
          type: integer
          format: int64
      - name: isConnected
        in: query
        description: Filter devices based on their connection status.
        schema:
          type: boolean
      - name: pageNumber
        in: query
        description: The page number for paginated results. Default is 1.
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        description: The number of results per page. Default is 1000.
        schema:
          type: integer
          format: int32
          default: 1000
      - name: nayaxDeviceSerial
        in: query
        description: The serial number of the Nayax device.
        schema:
          type: string
      - name: orderId
        in: query
        description: Filter devices based on the associated order ID.
        schema:
          type: integer
          format: int32
      - name: statusId
        in: query
        description: Filter devices based on their status ID.
        schema:
          type: integer
          format: int32
      - name: createdDt
        in: query
        description: Filter devices based on their creation date.
        schema:
          type: string
          format: date-time
      - name: updatedDt
        in: query
        description: Filter devices based on the last updated date.
        schema:
          type: string
          format: date-time
      - name: boardSerial
        in: query
        description: The serial number of the device's mainboard.
        schema:
          type: string
      - name: imei
        in: query
        description: The International Mobile Equipment Identity number of the device.
        schema:
          type: string
      - name: chipId
        in: query
        description: The unique identifier for the chip in the device.
        schema:
          type: string
      responses:
        '200':
          description: A list of devices matching the specified filters.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DeviceExtra"
  /v1/devices/history/{serialNumber}:
    post:
      tags:
      - Devices
      summary: Add RMA to device history
      description: Add a Return Merchandise Authorization (RMA) entry to the history of a device identified by its serial number.
      operationId: add-rma-to-device-history
      parameters:
      - name: serialNumber
        in: path
        required: true
        description: The serial number of the device to which the RMA entry will be added.
        schema:
          type: string
      requestBody:
        description: The details of the RMA entry to be added to the device's history.
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DevicesInsertHistoryDto"
      responses:
        '200':
          description: The RMA entry was successfully added to the device's history.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeviceExtra"
  /v1/devices/move/{actorId}:
    put:
      tags:
      - Devices
      summary: Move Devices to Actor ID
      description: Assigns or moves a list of devices to a specified actor identified by `actorId`. The request body should include an array of device identifiers (e.g., serial numbers).
      operationId: move-devices-to-actor-id
      parameters:
      - name: actorId
        in: path
        required: true
        description: The unique identifier of the actor to which the devices will be moved.
        schema:
          type: integer
          format: int64
      requestBody:
        description: An array of device identifiers to be moved to the specified actor.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: The devices were successfully moved to the specified actor.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DevicesMoveResponse"
  /v1/DeviceVersions/MainVersion:
    get:
      tags:
      - DeviceVersions
      summary: Get Firmware Versions
      description: Retrieves a list of firmware versions, optionally filtered by a specific version identifier.
      operationId: get-firmware-versions
      parameters:
      - name: versionId
        in: query
        description: The unique identifier of the firmware version to filter the results.
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: A list of firmware versions matching the specified criteria.
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FirmwareVersionResponseDTO"
    post:
      tags:
      - DeviceVersions
      summary: Add Firmware Version
      description: Adds a new firmware version to the system. The request body should include the details of the firmware version to be added.
      operationId: add-firmware-version
      requestBody:
        description: The details of the firmware version to be added.
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FirmwareVersionRequestDTO"
      responses:
        '200':
          description: The firmware version was successfully added.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FirmwareVersionResponseDTO"





components:
  securitySchemes:
    Authorization:
      type: apiKey
      description: Enter your API key. It's required to authenticate API requests.
      name: Authorization
      in: header
  schemas:
    Actors:
      type: object
      properties:
        ParentActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the parent actor, if applicable.
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier for this actor.
        ActorDescription:
          type: string
          nullable: true
          description: A brief description of the actor.
        ActorCode:
          type: integer
          format: int64
          nullable: true
          description: A unique code assigned to the actor.
        ActorAddress:
          type: string
          nullable: true
          description: The address associated with the actor.
        ActorContact:
          type: string
          nullable: true
          description: The contact details for the actor.
        ActorTypeID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the type of actor, defining the actor's role or category.
        ActorStatus:
          type: integer
          format: int32
          nullable: true
          description: The current status of the actor, represented by a status code.
        ActorHierarchyLevel:
          type: integer
          format: int32
          nullable: true
          description: The level of hierarchy where the actor is positioned within the organizational structure.
        CurrencyID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the currency used by the actor.
        LastUpdated:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the actor's information was last updated.
        RouteManagerName:
          type: string
          nullable: true
          description: The name of the route manager associated with the actor.
        RouteManagerMobile:
          type: string
          nullable: true
          description: The mobile number of the route manager associated with the actor.
        TimeZoneKey:
          type: integer
          format: int32
          nullable: true
          description: The key representing the time zone in which the actor operates.
        DayLightSavingsBit:
          type: boolean
          nullable: true
          description: Indicates whether daylight saving time is observed by the actor.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the country in which the actor is located.
        DailyCCTransLimitPerCard:
          type: integer
          format: int32
          nullable: true
          description: The daily credit card transaction limit per card for the actor.
        DailyPPTransLimitPerCard:
          type: integer
          format: int32
          nullable: true
          description: The daily prepaid card transaction limit per card for the actor.
        DailyExternalPPTransLimitPerCard:
          type: integer
          format: int32
          nullable: true
          description: The daily external prepaid card transaction limit per card for the actor.
        DailyCCTransLimitPerCardPerOperator:
          type: integer
          format: int32
          nullable: true
          description: The daily credit card transaction limit per card per operator for the actor.
        OperatorActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the operator managing this actor.
        DistributorActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the distributor associated with the actor.
        AreaActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the area actor that encompasses this actor.
        RouteActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the route actor associated with this actor.
        ActorHierarchy:
          type: string
          nullable: true
          description: The hierarchical structure to which the actor belongs.
        ActorHasChildrenBit:
          type: boolean
          nullable: true
          description: Indicates whether the actor has child entities.
        ActorHasMachinesBit:
          type: boolean
          nullable: true
          description: Indicates whether the actor is associated with any machines.
        ActorImageURL:
          type: string
          nullable: true
          description: The URL to an image representing the actor.
        ActorContractInfo:
          type: string
          nullable: true
          description: Contractual information related to the actor.
        ActorSQSID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the actor's SQS (Simple Queue Service) system, if applicable.
        UseProductGroupVATBit:
          type: boolean
          nullable: true
          description: Indicates whether VAT is applied based on the product group for this actor.
        EreceiptTransactionEndEnableBit:
          type: boolean
          nullable: true
          description: Indicates whether e-receipts are enabled for transactions ending with this actor.
        MaximumRevalueAmountLimit:
          type: number
          format: double
          nullable: true
          description: The maximum amount limit for revaluing transactions for this actor.
        ActorCreatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who created this actor's record.
        ActorCreationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when this actor was created.
        UpdateBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated this actor's record.
        CultureID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the culture or locale associated with the actor.
        RevaluePayoutByDistributor:
          type: boolean
          nullable: true
          description: Indicates whether the revalue payout is handled by the distributor.
        FiscalizationBit:
          type: boolean
          nullable: true
          description: Indicates whether fiscalization is enabled for this actor.
        GeoCountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the country based on the actor's geographic information.
        GeoState:
          type: string
          nullable: true
          description: The state or region based on the actor's geographic information.
        GeoCity:
          type: string
          nullable: true
          description: The city based on the actor's geographic information.
        GeoAddress:
          type: string
          nullable: true
          description: The address based on the actor's geographic information.
        GeoStreetNumber:
          type: string
          nullable: true
          description: The street number based on the actor's geographic information.
        GeoLongitude:
          type: number
          format: double
          nullable: true
          description: The geographic longitude of the actor's location.
        GeoLatitude:
          type: number
          format: double
          nullable: true
          description: The geographic latitude of the actor's location.
        GeoZipCode:
          type: string
          nullable: true
          description: The zip code based on the actor's geographic information.
        GeoZoom:
          type: integer
          format: int32
          nullable: true
          description: The zoom level for map-based services relevant to the actor's geographic location.
        ActorLanguageID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the language preference of the actor.
        ActorMerchantBit:
          type: string
          nullable: true
          description: Indicates whether the actor is associated with a merchant.
        ActorMerchantNameForDescriptor:
          type: string
          nullable: true
          description: The merchant name used for transaction descriptors related to this actor.
        OverrideGeoInherritcanceBit:
          type: boolean
          nullable: true
          description: Indicates whether the actor overrides inherited geographic settings.
        AirportID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the airport associated with the actor, if applicable.
        VerticalCustomJSON:
          type: string
          nullable: true
          description: Custom JSON data specific to the vertical market or industry the actor operates in.
        FiscalizationActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the actor responsible for fiscalization.
        SupportIncrementalAuth:
          type: boolean
          nullable: true
          description: Indicates whether incremental authorization is supported by this actor.
        MaximumDefaultCredit:
          type: number
          format: double
          nullable: true
          description: The maximum default credit limit allowed for this actor.
        Refs:
          type: object
          nullable: true
          description: A key-value pair object containing additional references associated with the actor.
          additionalProperties:
            type: string
            nullable: true
      additionalProperties: false
    ActorsDbEntity:
      type: object
      description: Schema representing the database entity for an actor, used for creating or updating actor details.
      properties:
        ParentActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the parent actor, if this actor is a sub-entity.
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier for the actor.
        ActorDescription:
          type: string
          nullable: true
          description: A brief description of the actor.
        ActorCode:
          type: integer
          format: int64
          nullable: true
          description: A code representing the actor, often used for identification or categorization.
        ActorAddress:
          type: string
          nullable: true
          description: The physical address associated with the actor.
        ActorContact:
          type: string
          nullable: true
          description: Contact information for the actor, such as a phone number or email.
        ActorTypeID:
          type: integer
          format: int32
          nullable: true
          description: The identifier representing the type of actor, which could indicate their role or classification.
        ActorStatus:
          type: integer
          format: int32
          nullable: true
          description: The current status of the actor, represented by a status code.
        ActorHierarchyLevel:
          type: integer
          format: int32
          nullable: true
          description: The level of hierarchy at which the actor operates within the organizational structure.
        CurrencyID:
          type: integer
          format: int32
          nullable: true
          description: The currency identifier used by the actor for transactions.
        LastUpdated:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the actor's information was last updated.
        RouteManagerName:
          type: string
          nullable: true
          description: The name of the route manager associated with the actor.
        RouteManagerMobile:
          type: string
          nullable: true
          description: The mobile contact of the route manager.
        TimeZoneKey:
          type: integer
          format: int32
          nullable: true
          description: The time zone key indicating the actor's local time zone.
        DayLightSavingsBit:
          type: boolean
          nullable: true
          description: Indicates whether the actor observes daylight saving time.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the country in which the actor is located.
        DailyCCTransLimitPerCard:
          type: integer
          format: int32
          nullable: true
          description: The daily credit card transaction limit per card for the actor.
        DailyPPTransLimitPerCard:
          type: integer
          format: int32
          nullable: true
          description: The daily prepaid card transaction limit per card for the actor.
        DailyExternalPPTransLimitPerCard:
          type: integer
          format: int32
          nullable: true
          description: The daily external prepaid card transaction limit per card for the actor.
        DailyCCTransLimitPerCardPerOperator:
          type: integer
          format: int32
          nullable: true
          description: The daily credit card transaction limit per card per operator.
        OperatorActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the operator managing this actor.
        DistributorActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the distributor associated with the actor.
        AreaActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the area actor that encompasses this actor.
        RouteActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the route actor associated with this actor.
        ActorHierarchy:
          type: string
          nullable: true
          description: The hierarchical structure or path to which the actor belongs.
        ActorHasChildrenBit:
          type: boolean
          nullable: true
          description: Indicates whether the actor has any child entities.
        ActorHasMachinesBit:
          type: boolean
          nullable: true
          description: Indicates whether the actor is associated with any machines.
        ActorImageURL:
          type: string
          nullable: true
          description: URL of an image representing the actor.
        ActorContractInfo:
          type: string
          nullable: true
          description: Contract information related to the actor.
        ActorSQSID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the actor's SQS (Simple Queue Service) system, if applicable.
        UseProductGroupVATBit:
          type: boolean
          nullable: true
          description: Indicates whether VAT is applied based on the product group for this actor.
        EreceiptTransactionEndEnableBit:
          type: boolean
          nullable: true
          description: Indicates whether e-receipts are enabled for transactions ending with this actor.
        MaximumRevalueAmountLimit:
          type: number
          format: double
          nullable: true
          description: The maximum amount limit for revaluing transactions for this actor.
        ActorCreatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who created this actor's record.
        ActorCreationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when this actor was created.
        UpdateBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated this actor's record.
        CultureID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the culture or locale associated with the actor.
        RevaluePayoutByDistributor:
          type: boolean
          nullable: true
          description: Indicates whether the revalue payout is handled by the distributor.
        FiscalizationBit:
          type: boolean
          nullable: true
          description: Indicates whether fiscalization is enabled for this actor.
        GeoCountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the country based on the actor's geographic information.
        GeoState:
          type: string
          nullable: true
          description: The state or region based on the actor's geographic information.
        GeoCity:
          type: string
          nullable: true
          description: The city based on the actor's geographic information.
        GeoAddress:
          type: string
          nullable: true
          description: The address based on the actor's geographic information.
        GeoStreetNumber:
          type: string
          nullable: true
          description: The street number based on the actor's geographic information.
        GeoLongitude:
          type: number
          format: double
          nullable: true
          description: The geographic longitude of the actor's location.
        GeoLatitude:
          type: number
          format: double
          nullable: true
          description: The geographic latitude of the actor's location.
        GeoZipCode:
          type: string
          nullable: true
          description: The zip code based on the actor's geographic information.
        GeoZoom:
          type: integer
          format: int32
          nullable: true
          description: The zoom level for map-based services relevant to the actor's geographic location.
        ActorLanguageID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the language preference of the actor.
        ActorMerchantBit:
          type: string
          nullable: true
          description: Indicates whether the actor is associated with a merchant.
        ActorMerchantNameForDescriptor:
          type: string
          nullable: true
          description: The merchant name used for transaction descriptors related to this actor.
        OverrideGeoInherritcanceBit:
          type: boolean
          nullable: true
          description: Indicates whether the actor overrides inherited geographic settings.
        AirportID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the airport associated with the actor, if applicable.
        VerticalCustomJSON:
          type: string
          nullable: true
          description: Custom JSON data specific to the vertical market or industry the actor operates in.
        FiscalizationActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the actor responsible for fiscalization.
        SupportIncrementalAuth:
          type: boolean
          nullable: true
          description: Indicates whether incremental authorization is supported by this actor.
        MaximumDefaultCredit:
          type: number
          format: double
          nullable: true
          description: The maximum default credit limit allowed for this actor.
      additionalProperties: false
    ActorCreateRequest:
      type: object
      description: Request schema for creating a new actor, including details and billing gateways.
      properties:
        ActorDetails:
          $ref: '#/components/schemas/ActorDetailsRequest'
          description: Detailed information about the actor.
        ActorBillingGateways:
          type: array
          items:
            $ref: '#/components/schemas/ActorBillingGatewaysRequest'
          nullable: true
          description: A list of billing gateways associated with the actor.
        ActorBillingPlanID:
          type: integer
          format: int32
          description: The identifier for the billing plan assigned to the actor.
      additionalProperties: false
    ActorDetailsRequest:
      type: object
      description: Detailed information about the actor, including geographic and contact details.
      properties:
        ActorDescription:
          type: string
          nullable: true
          description: A brief description of the actor.
        ActorCode:
          type: integer
          format: int64
          description: A unique code representing the actor.
        ActorContact:
          type: string
          nullable: true
          description: Contact information for the actor, such as a phone number or email.
        ActorTypeID:
          type: integer
          format: int32
          description: The identifier representing the type of actor, defining their role or category.
        StatusID:
          type: integer
          format: int32
          description: The status identifier of the actor.
        CurrencyID:
          type: integer
          format: int32
          description: The identifier for the currency used by the actor.
        TimeZoneKey:
          type: integer
          format: int32
          description: The key representing the actor's time zone.
        CountryID:
          type: integer
          format: int32
          description: The identifier for the country in which the actor is located.
        CultureID:
          type: integer
          format: int32
          description: The identifier for the culture or locale associated with the actor.
        GeoOverrideInheritanceBit:
          type: boolean
          description: Indicates whether geographic inheritance settings are overridden for this actor.
        GeoSearchAddress:
          type: string
          nullable: true
          description: A full address string used for geographic search purposes.
        GeoCountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the country based on the actor's geographic location.
        GeoStateName:
          type: string
          nullable: true
          description: The state or region name based on the actor's geographic location.
        GeoCityName:
          type: string
          nullable: true
          description: The city name based on the actor's geographic location.
        GeoStreetName:
          type: string
          nullable: true
          description: The street name based on the actor's geographic location.
        GeoStreetNumber:
          type: string
          nullable: true
          description: The street number based on the actor's geographic location.
        GeoLogitude:
          type: number
          format: double
          nullable: true
          description: The geographic longitude of the actor's location.
        GeoLatitude:
          type: number
          format: double
          nullable: true
          description: The geographic latitude of the actor's location.
        GeoZoom:
          type: integer
          format: int32
          description: The zoom level for map-based services relevant to the actor's geographic location.
        GeoZipCode:
          type: string
          nullable: true
          description: The zip code based on the actor's geographic location.
        LanguageID:
          type: integer
          format: int32
          description: The identifier for the language preference of the actor.
        MCCCode:
          type: string
          nullable: true
          description: The merchant category code (MCC) associated with the actor, if applicable.
      additionalProperties: false
    ActorBillingGatewaysRequest:
      type: object
      description: Information about billing gateways associated with the actor.
      properties:
        BillingProviderID:
          type: integer
          format: int32
          description: The identifier for the billing provider.
        TerminalID:
          type: integer
          format: int64
          description: The terminal identifier used for transactions.
        ShvaZField:
          type: string
          nullable: true
          description: An optional field for SHVA (Shva Payment Service Provider) Z information.
        TransactionKey:
          type: string
          nullable: true
          description: A key used for securing transactions.
        ZFieldAllowedBit:
          type: boolean
          description: Indicates whether the Z field is allowed for transactions.
        MerchantID:
          type: string
          nullable: true
          description: The merchant identifier associated with the actor.
        SubMerchantID:
          type: string
          nullable: true
          description: The sub-merchant identifier, if applicable.
        Username:
          type: string
          nullable: true
          description: The username used for authentication with the billing provider.
        Password:
          type: string
          nullable: true
          description: The password used for authentication with the billing provider.
        WithZipCodeBit:
          type: boolean
          description: Indicates whether the zip code is required for transactions.
        SupportForcedTransactionsBit:
          type: boolean
          description: Indicates whether forced transactions are supported.
        ForcedTransactionTerminalID:
          type: integer
          format: int64
          nullable: true
          description: The terminal identifier used for forced transactions.
        AVSOnlyBit:
          type: boolean
          description: Indicates whether only AVS (Address Verification System) transactions are supported.
        PartialConfirmationBit:
          type: boolean
          description: Indicates whether partial confirmations are supported for transactions.
        DisableDebitCards:
          type: boolean
          description: Indicates whether debit cards are disabled for this billing gateway.
        DebitCardPrefix:
          type: string
          nullable: true
          description: A prefix used for identifying debit cards, if applicable.
        DisableMagStripeBit:
          type: boolean
          description: Indicates whether magnetic stripe cards are disabled.
        FiscalBit:
          type: boolean
          description: Indicates whether fiscal requirements are enforced for this billing gateway.
        OverrideURL:
          type: string
          nullable: true
          description: A custom URL to override the default billing gateway URL.
        RemoteStartID:
          type: integer
          format: int32
          description: The identifier used for remote start transactions.
        EnableMultiBillingProvidersBit:
          type: boolean
          description: Indicates whether multiple billing providers are enabled for this actor.
        RuleSetID:
          type: integer
          format: int32
          description: The identifier for the set of rules governing transactions for this billing gateway.
        CustomData:
          type: object
          nullable: true
          description: Custom data specific to the billing gateway.
          additionalProperties:
            nullable: true
      additionalProperties: false
    ActorCreateResponse:
      type: object
      description: Response schema returned after successfully creating a new actor, containing the actor's details.
      properties:
        ParentActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the parent actor, if applicable.
        ActorID:
          type: integer
          format: int64
          description: The unique identifier of the newly created actor.
        ActorDescription:
          type: string
          nullable: true
          description: A brief description of the actor.
        ActorCode:
          type: integer
          format: int64
          nullable: true
          description: A code assigned to the actor, often used for identification or categorization.
        ActorContact:
          type: string
          nullable: true
          description: Contact information for the actor, such as a phone number or email.
        ActorTypeID:
          type: integer
          format: int32
          description: The identifier representing the type of actor, defining their role or category.
        ActorStatus:
          type: integer
          format: int32
          description: The status identifier of the actor, indicating their current status.
        ActorHierarchyLevel:
          type: integer
          format: int32
          description: The level of hierarchy where the actor is positioned within the organizational structure.
        CurrencyID:
          type: integer
          format: int32
          description: The identifier for the currency used by the actor.
        LastUpdated:
          type: string
          format: date-time
          description: The date and time when the actor's information was last updated.
        TimeZoneKey:
          type: integer
          format: int32
          nullable: true
          description: The key representing the time zone in which the actor operates.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the country in which the actor is located.
        OperatorActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the operator managing this actor, if applicable.
        DistributorActorID:
          type: integer
          format: int64
          description: The identifier for the distributor associated with the actor.
        ActorHierarchy:
          type: string
          nullable: true
          description: The hierarchical structure to which the actor belongs.
        ActorCreatedBy:
          type: integer
          format: int64
          description: The identifier of the user who created this actor's record.
        ActorCreationDate:
          type: string
          format: date-time
          description: The date and time when this actor was created.
        UpdateBy:
          type: integer
          format: int64
          description: The identifier of the user who last updated this actor's record.
        CultureID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the culture or locale associated with the actor.
        GeoCountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the country based on the actor's geographic information.
        GeoState:
          type: string
          nullable: true
          description: The state or region based on the actor's geographic information.
        GeoCity:
          type: string
          nullable: true
          description: The city based on the actor's geographic information.
        GeoAddress:
          type: string
          nullable: true
          description: The address based on the actor's geographic information.
        GeoStreetNumber:
          type: string
          nullable: true
          description: The street number based on the actor's geographic information.
        GeoLongitude:
          type: number
          format: double
          nullable: true
          description: The geographic longitude of the actor's location.
        GeoLatitude:
          type: number
          format: double
          nullable: true
          description: The geographic latitude of the actor's location.
        GeoZipCode:
          type: string
          nullable: true
          description: The zip code based on the actor's geographic information.
        GeoZoom:
          type: integer
          format: int32
          nullable: true
          description: The zoom level for map-based services relevant to the actor's geographic location.
        ActorLanguageID:
          type: integer
          format: int32
          nullable: true
          description: The identifier for the language preference of the actor.
        OverrideGeoInherritcanceBit:
          type: boolean
          description: Indicates whether the actor overrides inherited geographic settings.
      additionalProperties: false
    ActorPaymentResponse:
      type: object
      description: Schema representing the payment methods associated with an actor, including details on external payment providers and extra charges.
      properties:
        ActorID:
          type: integer
          format: int64
          description: The unique identifier of the actor.
        PaymentMethodID:
          type: integer
          format: int32
          description: The identifier of the payment method associated with the actor.
        ExtraChargePercentageBit:
          type: boolean
          nullable: true
          description: Indicates whether an extra charge is calculated as a percentage of the transaction.
        ExtraChargeValue:
          type: number
          format: double
          description: The value of the extra charge applied to transactions.
        LastUpdated:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the payment method details were last updated.
        ExternalPaymentProviderURL:
          type: string
          nullable: true
          description: The URL of the external payment provider, if applicable.
        ExternalPaymentProviderID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the external payment provider.
        ExternalPaymentProviderModeID:
          type: integer
          format: int32
          nullable: true
          description: The mode identifier of the external payment provider (e.g., test, production).
        ExternalPaymentProviderUsername:
          type: string
          nullable: true
          description: The username used for authentication with the external payment provider.
        ExternalPaymentProviderPassword:
          type: string
          nullable: true
          description: The password used for authentication with the external payment provider.
        ExternalPaymentProviderMerchantID:
          type: string
          nullable: true
          description: The merchant identifier used by the external payment provider.
        ExternalPaymentProviderKey:
          type: string
          nullable: true
          description: The key used by the external payment provider for transaction processing.
        ExternalPaymentProviderAppID:
          type: string
          nullable: true
          description: The application identifier used by the external payment provider.
        ExternalPaymentProviderCertificatePath:
          type: string
          nullable: true
          description: The file path to the certificate used by the external payment provider.
        ExternalPaymentProviderCertificatePassword:
          type: string
          nullable: true
          description: The password for the external payment provider's certificate.
        ExternalPaymentProviderApiKey:
          type: string
          nullable: true
          description: The API key used by the external payment provider.
        ExternalPaymentProviderLocationIdentifier:
          type: string
          nullable: true
          description: The location identifier used by the external payment provider.
        PaymentMethodWorkingDays:
          type: array
          items:
            $ref: '#/components/schemas/WorkDay'
          nullable: true
          description: The working days and hours during which the payment method is available.
        PaymentMethodCustomData:
          type: string
          nullable: true
          description: Custom data associated with the payment method, if any.
        ExtraChargeBackupValue:
          type: number
          format: double
          description: The backup value of the extra charge applied to transactions.
        ChargeMachineID:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the machine where charges are processed, if applicable.
      additionalProperties: false
    WorkDay:
      type: object
      description: Schema representing the working days and hours for a specific payment method.
      properties:
        name:
          type: string
          nullable: true
          description: The name of the workday (e.g., Monday, Holiday).
        week_day:
          type: integer
          format: int32
          nullable: true
          description: The day of the week represented as an integer (e.g., 1 for Monday, 7 for Sunday).
        start_time:
          type: string
          format: date-span
          nullable: true
          description: The start time of the working hours for the payment method.
        end_time:
          type: string
          format: date-span
          nullable: true
          description: The end time of the working hours for the payment method.
        work_hour_lut_id:
          type: integer
          format: int32
          nullable: true
          description: The lookup identifier for the work hours associated with the payment method.
      additionalProperties: false
    ApiResult:
      type: object
      description: Schema representing the result of an API operation, including status and messages.
      properties:
        Ok:
          type: boolean
          description: Indicates whether the API operation was successful (`true`) or not (`false`).
        Message:
          type: string
          nullable: true
          description: A user-friendly message describing the result of the operation, if applicable.
        SystemMessage:
          type: string
          nullable: true
          description: A system-level message providing additional details about the operation's result, often used for debugging or logging.
        code:
          type: string
          nullable: true
          description: An optional code representing the result of the operation, which can be used for more granular handling of responses.
      additionalProperties: false
    EvMeterDashBoard:
      type: object
      description: Represents the EV meter dashboard data for an operator, including aggregated data at both the operator and machine levels.
      properties:
        OperatorDashboard:
          $ref: '#/components/schemas/OperatorLevelAggregation'
          description: Aggregated data at the operator level, summarizing the status of all machines under the operator.
        MachineDashboard:
          $ref: '#/components/schemas/MachineLevelAggregation'
          description: Aggregated data at the machine level, providing detailed metrics for individual machines.
        TimePeriod:
          type: integer
          format: int32
          nullable: true
          description: The time period over which the dashboard data is aggregated.
      additionalProperties: false
    OperatorLevelAggregation:
      type: object
      description: Aggregated data at the operator level, summarizing the number and status of machines under the operator's management.
      properties:
        TotalOperatorMachines:
          type: integer
          format: int32
          description: The total number of machines managed by the operator.
        TotalCommunicatingMachines:
          type: integer
          format: int32
          description: The number of machines that are currently communicating and reporting data.
        TotalActiveMachines:
          type: integer
          format: int32
          description: The number of machines that are currently active and in operation.
        TotalSilentMachines:
          type: integer
          format: int32
          description: The number of machines that are not communicating or reporting data.
      additionalProperties: false
    MachineLevelAggregation:
      type: object
      description: Aggregated data at the machine level, providing detailed metrics on the performance and usage of individual machines.
      properties:
        UnitOfMeasure:
          type: string
          nullable: true
          description: The unit of measure used for energy consumption and other metrics (e.g., kWh).
        UnitOfMeasureSymbol:
          type: string
          nullable: true
          description: The symbol representing the unit of measure (e.g., "kWh" for kilowatt-hours).
        NumberOfChargingSessions:
          type: number
          format: double
          description: The total number of charging sessions recorded during the specified time period.
        NumberOfTransactionsForTimeInterval:
          type: number
          format: double
          description: The total number of transactions processed during the specified time period.
        SalesAmountForTimeInterval:
          type: number
          format: double
          description: The total sales amount generated during the specified time period.
        TotalChargingSessionsDuration:
          type: number
          format: double
          description: The total duration of all charging sessions during the specified time period.
        TotalEnergyConsumption:
          type: integer
          format: int32
          description: The total energy consumption recorded during the specified time period.
      additionalProperties: false
    DispatchActorEncKeysDbEntity:
      type: object
      description: Represents the encryption key information associated with an actor, including the encryption version and key details.
      properties:
        actor_id:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the actor associated with this encryption key.
        enc_ver:
          type: integer
          format: int32
          nullable: true
          description: The version of the encryption key.
        enc_key:
          type: string
          nullable: true
          description: The encryption key used for securing data.
        created_dt:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the encryption key was created.
      additionalProperties: false
    ActorHirarchyDto:
      type: object
      description: Represents the hierarchy of an actor, including details about the actor and its children in the hierarchy.
      properties:
        ParentActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the parent actor, if applicable. This indicates the actor's position within a larger hierarchy.
        ActorID:
          type: integer
          format: int64
          description: The unique identifier of the actor.
        ActorDescription:
          type: string
          nullable: true
          description: A brief description of the actor.
        ActorTypeID:
          type: integer
          format: int32
          description: The identifier representing the type of actor, defining their role or classification.
        ActorStatus:
          type: integer
          format: int32
          description: The status identifier of the actor, indicating their current status.
        ActorHierarchyLevel:
          type: integer
          format: int32
          description: The level of hierarchy at which the actor is positioned within the organizational structure.
        ActorChildren:
          type: array
          items:
            $ref: '#/components/schemas/ActorHirarchyDto'
          nullable: true
          description: A list of child actors that belong to this actor, representing the next level in the hierarchy.
      additionalProperties: false
    MachineGroupResponseDTO:
      type: object
      description: Represents the details of a machine group associated with an actor, including identification, status, and audit information.
      properties:
        MachineGroupId:
          type: integer
          format: int32
          nullable: true
          description: The unique identifier of the machine group.
        ActorId:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the actor associated with this machine group.
        MachineGroupName:
          type: string
          nullable: true
          description: The name of the machine group.
        MachineGroupCode:
          type: integer
          format: int64
          nullable: true
          description: A code assigned to the machine group for identification or categorization.
        MachineGroupStatus:
          type: integer
          format: int32
          description: The status identifier of the machine group, indicating its current state.
        CreatedBy:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the user who created this machine group.
        CreatedOn:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the machine group was created.
        UpdatedOn:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the machine group was last updated.
        UpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the user who last updated this machine group.
      additionalProperties: false
    MachineGroupRequestDTO:
      type: object
      description: Represents the data required to create or update a machine group associated with an actor.
      properties:
        MachineGroupId:
          type: integer
          format: int32
          nullable: true
          description: The unique identifier of the machine group. This is typically provided when updating an existing machine group.
        MachineGroupName:
          type: string
          nullable: true
          description: The name of the machine group.
        MachineGroupCode:
          type: integer
          format: int64
          nullable: true
          description: A code assigned to the machine group for identification or categorization.
        MachineGroupStatus:
          type: integer
          format: int32
          description: The status identifier of the machine group, indicating its current state.
      additionalProperties: false
    ActorGroupRequestDTO:
      type: object
      description: Represents the data required to add or delete an actor group associated with an actor.
      properties:
        RoleGroupId:
          type: integer
          format: int32
          nullable: true
          description: The unique identifier of the role group. This is typically provided when adding or deleting a role group associated with an actor.
      additionalProperties: false
    ActorGroupResponseDTO:
      type: object
      description: Represents the response details of an actor group associated with an actor.
      properties:
        RoleGroupId:
          type: integer
          format: int32
          nullable: true
          description: The unique identifier of the role group.
        RoleGroupName:
          type: string
          nullable: true
          description: The name of the role group.
        UpdatedDT:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the role group was last updated.
      additionalProperties: false
    MerchantBankInfo:
      type: object
      description: Represents the bank information associated with an actor, including account details, bank details, and contact information.
      properties:
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the actor associated with this bank information.
        AccountHolder:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the account holder, if applicable.
        CompanyName:
          type: string
          nullable: true
          description: The name of the company associated with the bank account.
        PhoneNumber:
          type: string
          nullable: true
          description: The phone number associated with the bank account.
        MobileNumber:
          type: string
          nullable: true
          description: The mobile number associated with the bank account.
        CurrencyId:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the currency used in the bank account.
        CountryId:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the country associated with the bank account.
        SWIFT / BIC:
          type: string
          nullable: true
          description: The SWIFT or BIC code of the bank.
        IBAN:
          type: string
          nullable: true
          description: The International Bank Account Number (IBAN).
        RoutingNumber:
          type: string
          nullable: true
          description: The routing number of the bank.
        AccountType:
          type: string
          nullable: true
          description: The type of bank account (e.g., savings, checking).
        BankName:
          type: string
          nullable: true
          description: The name of the bank.
        AccountName:
          type: string
          nullable: true
          description: The name on the bank account.
        AccountNumber:
          type: string
          nullable: true
          description: The account number of the bank account.
        BankCode:
          type: integer
          format: int64
          nullable: true
          description: The code of the bank.
        BranchCode:
          type: string
          nullable: true
          description: The code of the bank branch.
        CompanyEmail:
          type: string
          nullable: true
          description: The email address associated with the company.
        PhoneCountryCode:
          type: integer
          format: int32
          nullable: true
          description: The country code for the phone number.
        MobileCountryCode:
          type: integer
          format: int32
          nullable: true
          description: The country code for the mobile number.
        FirstName:
          type: string
          nullable: true
          description: The first name of the individual associated with the bank account.
        LastName:
          type: string
          nullable: true
          description: The last name of the individual associated with the bank account.
        Refs:
          type: object
          nullable: true
          readOnly: true
          description: Additional references or metadata associated with the bank information.
          additionalProperties:
            type: string
            nullable: true
      additionalProperties: false
    BillingReportsResponse:
      type: object
      description: Represents the response containing billing reports for a specified actor, including any failure reasons if applicable.
      properties:
        BillingReports:
          type: array
          nullable: true
          description: A list of billing reports associated with the specified actor and date range.
          items:
            $ref: '#/components/schemas/SingleBillingReportResponse'
        FailReason:
          type: string
          nullable: true
          description: The reason for any failure in retrieving the billing reports, if applicable.
      additionalProperties: false
    SingleBillingReportResponse:
      type: object
      description: Represents a single billing report, including the report's date range, frequency, and associated files.
      properties:
        StartDate:
          type: string
          format: date-time
          description: The start date of the billing report's coverage period.
        EndDate:
          type: string
          format: date-time
          description: The end date of the billing report's coverage period.
        Frequency:
          type: string
          nullable: true
          description: The frequency of the billing report (e.g., daily, weekly, monthly).
        Reports:
          type: array
          nullable: true
          description: A list of report file paths associated with this billing report.
          items:
            $ref: '#/components/schemas/ReportPath'
      additionalProperties: false
    ReportPath:
      type: object
      description: Represents the path and type of a specific billing report file.
      properties:
        Type:
          type: string
          nullable: true
          description: The type of the report file (e.g., PDF, CSV).
        Path:
          type: string
          nullable: true
          description: The file path where the report can be accessed.
      additionalProperties: false
    CardGetDto:
      type: object
      description: Represents the comprehensive details of a card, including its attributes, limits, usage, and associated rewards and location limits.
      properties:
        CardDetails:
          $ref: '#/components/schemas/CardDetailsGet'
          description: Detailed information about the card.
        CardHolderDetails:
          $ref: '#/components/schemas/CardHolderDetailsGet'
          description: Information about the cardholder.
        CardCreditAttributes:
          $ref: '#/components/schemas/CardCreditAttributes'
          description: Credit attributes associated with the card.
        CardCreditLimits:
          $ref: '#/components/schemas/CardCreditLimits'
          description: Credit limits associated with the card.
        CardDateRules:
          $ref: '#/components/schemas/CardDateRules'
          description: Date-related rules applied to the card.
        CardCreditUsage:
          $ref: '#/components/schemas/CardCreditUsageGet'
          description: Information on the credit usage of the card.
        CardRevalueRewardRules:
          type: array
          nullable: true
          description: A list of revalue reward rules associated with the card.
          items:
            $ref: '#/components/schemas/CardRevalueRewardRuleGet'
        GroupLocationLimits:
          type: array
          nullable: true
          description: A list of location limits associated with the card's group.
          items:
            $ref: '#/components/schemas/CardGroupLocationLimitGet'
      additionalProperties: false
    CardDetailsGet:
      type: object
      description: Represents the detailed information of a card.
      properties:
        CardID:
          type: integer
          format: int64
          description: The unique identifier of the card.
        ActorID:
          type: integer
          format: int64
          description: The unique identifier of the actor associated with the card.
        CardUniqueIdentifier:
          type: string
          nullable: true
          description: The unique identifier assigned to the card.
        CardDisplayNumber:
          type: string
          nullable: true
          description: The display number of the card.
        CardTypeID:
          type: integer
          format: int32
          nullable: true
          description: The type identifier of the card.
        PhysicalTypeID:
          type: integer
          format: int32
          nullable: true
          description: The physical type identifier of the card.
        Notes:
          type: string
          nullable: true
          description: Any additional notes associated with the card.
        Status:
          type: integer
          format: int32
          nullable: true
          description: The current status of the card.
        ExternalApplicationUserID:
          type: string
          nullable: true
          description: The external application user ID associated with the card.
        CreatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who created the card.
        CreatedDT:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card was created.
        UpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated the card.
        UpdatedDT:
          type: string
          format: date-time
          description: The date and time when the card was last updated.
      additionalProperties: false
    CardHolderDetailsGet:
      type: object
      description: Represents the details of the cardholder, including personal information and contact details.
      properties:
        CardHolderName:
          type: string
          nullable: true
          description: The name of the cardholder.
        UserIdentity:
          type: string
          nullable: true
          description: The unique identity or user ID of the cardholder.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the country associated with the cardholder.
        MobileNumber:
          type: string
          nullable: true
          description: The mobile number of the cardholder.
        Email:
          type: string
          nullable: true
          description: The email address of the cardholder.
        MemberTypeID:
          type: integer
          format: int32
          nullable: true
          description: The identifier representing the type of membership the cardholder has.
        ImageUrl:
          type: string
          nullable: true
          description: The URL of the cardholder's image.
      additionalProperties: false
    CardCreditAttributes:
      type: object
      description: Represents the credit attributes associated with a card, including currency, credit amounts, and revalue options.
      properties:
        CurrencyID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the currency used for the card's credit.
        Credit:
          type: number
          format: double
          nullable: true
          description: The amount of credit available on the card.
        RevalueCredit:
          type: number
          format: double
          nullable: true
          description: The amount of credit added to the card during a revalue operation.
        CreditTypeMoneyBit:
          type: boolean
          nullable: true
          description: Indicates whether the credit type is money.
        CreditAccumulateBit:
          type: boolean
          nullable: true
          description: Indicates whether the credit on the card can accumulate over time.
        CreditSingleUseBit:
          type: boolean
          nullable: true
          description: Indicates whether the credit on the card is for single-use only.
        RevalueCashBit:
          type: boolean
          nullable: true
          description: Indicates whether the card can be revalued with cash.
        RevalueCreditCardBit:
          type: boolean
          nullable: true
          description: Indicates whether the card can be revalued with a credit card.
        AmountMonthlyReload:
          type: number
          format: double
          nullable: true
          description: The monthly reload amount for the card.
        TransactionsMonthlyReload:
          type: integer
          format: int32
          nullable: true
          description: The number of transactions allowed per month for reloading the card.
        DiscountTypeBit:
          type: integer
          format: int32
          nullable: true
          description: Indicates the type of discount applied to the card.
        DiscountValue:
          type: number
          format: double
          nullable: true
          description: The value of the discount applied to the card.
      additionalProperties: false
    CardCreditLimits:
      type: object
      description: Represents the credit limits associated with a card, including daily, weekly, and monthly limits.
      properties:
        AmountDailyLimit:
          type: number
          format: double
          nullable: true
          description: The daily limit on the amount of credit that can be used.
        AmountWeeklyLimit:
          type: number
          format: double
          nullable: true
          description: The weekly limit on the amount of credit that can be used.
        TransactionsDailyLimit:
          type: integer
          format: int32
          nullable: true
          description: The daily limit on the number of transactions that can be performed.
        TransactionsWeeklyLimit:
          type: integer
          format: int32
          nullable: true
          description: The weekly limit on the number of transactions that can be performed.
        AmountMonthlyLimit:
          type: number
          format: double
          nullable: true
          description: The monthly limit on the amount of credit that can be used.
        TransactionsMonthlyLimit:
          type: integer
          format: int32
          nullable: true
          description: The monthly limit on the number of transactions that can be performed.
        DiscountTransactionsTotalLimit:
          type: integer
          format: int32
          nullable: true
          description: The total limit on discount transactions.
        MaxRevalueAmountLimit:
          type: number
          format: double
          nullable: true
          description: The maximum limit for revalue amounts.
        WeekDayLimitEnabledBit:
          type: boolean
          description: Indicates whether weekday limits are enabled.
        WeekDayAmountLimit:
          type: string
          nullable: true
          description: The amount limit applied on specific weekdays.
        WeekDayTransactionLimit:
          type: string
          nullable: true
          description: The transaction limit applied on specific weekdays.
      additionalProperties: false
    CardDateRules:
      type: object
      description: Represents the date rules associated with a card, including activation, expiration, and single-use dates.
      properties:
        ActivationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card becomes active.
        ExpirationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card expires.
        RevalueExpirationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the revalue credit on the card expires.
        SetSingleUseDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card is set for single-use.
        RemoveSingleUseDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the single-use restriction is removed from the card.
      additionalProperties: false
    CardCreditUsageGet:
      type: object
      description: Represents the usage details of a card, including daily, weekly, monthly, and total usage amounts and transactions.
      properties:
        AmountDailyUsage:
          type: number
          format: double
          nullable: true
          description: The amount of credit used daily.
        AmountWeeklyUsage:
          type: number
          format: double
          nullable: true
          description: The amount of credit used weekly.
        TransactionsDailyUsage:
          type: number
          format: double
          nullable: true
          description: The number of transactions performed daily.
        TransactionsWeeklyUsage:
          type: number
          format: double
          nullable: true
          description: The number of transactions performed weekly.
        AmountMonthlyUsage:
          type: number
          format: double
          nullable: true
          description: The amount of credit used monthly.
        TransactionsMonthlyUsage:
          type: number
          format: double
          nullable: true
          description: The number of transactions performed monthly.
        AmountTotalUsage:
          type: number
          format: double
          nullable: true
          description: The total amount of credit used.
        TransactionsTotalUsage:
          type: number
          format: double
          nullable: true
          description: The total number of transactions performed.
        AmountCapture:
          type: number
          format: double
          nullable: true
          description: The amount of credit captured.
        TransactionsCapture:
          type: integer
          format: int32
          nullable: true
          description: The number of transactions captured.
        CaptureDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time of the last capture.
      additionalProperties: false
    CardRevalueRewardRuleGet:
      type: object
      description: Represents the revalue reward rule associated with a card, including reward details and status.
      properties:
        RuleID:
          type: integer
          format: int32
          description: The unique identifier of the reward rule.
        RewardActorID:
          type: integer
          format: int64
          description: The identifier of the actor receiving the reward.
        Status:
          type: boolean
          description: The current status of the reward rule.
        RevalueAmount:
          type: number
          format: double
          description: The amount required to trigger the reward.
        RewardValueTypeBit:
          type: boolean
          description: Indicates whether the reward value is a fixed amount or a percentage.
        RewardValue:
          type: number
          format: double
          description: The value of the reward.
        UpdatedDT:
          type: string
          format: date-time
          description: The date and time when the reward rule was last updated.
        UpdatedBy:
          type: integer
          format: int32
          description: The identifier of the user who last updated the reward rule.
      additionalProperties: false
    CardGroupLocationLimitGet:
      type: object
      description: Represents the location limits associated with a card group, including daily limits and update information.
      properties:
        CardGroupEnabledBit:
          type: boolean
          description: Indicates whether the card group location limit is enabled.
        GroupName:
          type: string
          nullable: true
          description: The name of the card group.
        CardGroupId:
          type: integer
          format: int64
          description: The unique identifier of the card group.
        GroupDailyLimit:
          type: integer
          format: int32
          nullable: true
          description: The daily limit for the card group.
        UpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated the location limit.
        LastUpdated:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the location limit was last updated.
      additionalProperties: false
    CardsWithActorId:
      type: object
      description: Represents the details required to create or update a card associated with an actor, including card attributes and contact information.
      properties:
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the actor associated with the card.
        CardUniqueIdentifier:
          type: string
          nullable: true
          description: The unique identifier assigned to the card.
        CardDisplayNumber:
          type: string
          nullable: true
          description: The display number of the card.
        CardHolderName:
          type: string
          nullable: true
          description: The name of the cardholder.
        CardStatus:
          type: integer
          format: int32
          nullable: true
          description: The current status of the card.
        CardType:
          type: integer
          format: int32
          nullable: true
          description: The type identifier of the card.
        CardUserIdentity:
          type: string
          nullable: true
          description: The unique identity or user ID associated with the card.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the country associated with the card.
        Currency:
          type: integer
          format: int32
          nullable: true
          description: The currency identifier used for the card.
        MobileNumber:
          type: string
          nullable: true
          description: The mobile number associated with the card.
        Email:
          type: string
          nullable: true
          description: The email address associated with the card.
        CardPhysicalType:
          type: integer
          format: int32
          nullable: true
          description: The physical type identifier of the card.
        MemberType:
          type: integer
          format: int32
          nullable: true
          description: The membership type identifier associated with the card.
        CardActivationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card becomes active.
        CardExpirationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card expires.
        CardImageUrl:
          type: string
          nullable: true
          description: The URL of the image associated with the card.
        CardNote:
          type: string
          nullable: true
          description: Any additional notes associated with the card.
        wd_limits_money:
          type: string
          nullable: true
          description: The monetary limits applied to the card on specific weekdays.
        wd_limits_trans:
          type: string
          nullable: true
          description: The transaction limits applied to the card on specific weekdays.
        use_wd_limit:
          type: boolean
          nullable: true
          description: Indicates whether the weekday limits are enabled for the card.
      additionalProperties: false
    Cards:
      type: object
      description: Represents the details of a card, including its attributes, status, and associated actor information.
      properties:
        MobileNumber:
          type: string
          nullable: true
          description: The mobile number associated with the card.
        CardID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the card.
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the actor associated with the card.
        CardUniqueIdentifier:
          type: string
          nullable: true
          description: The unique identifier assigned to the card.
        CardDisplayNumber:
          type: string
          nullable: true
          description: The display number of the card.
        CardHolderName:
          type: string
          nullable: true
          description: The name of the cardholder.
        CardStatus:
          type: integer
          format: int32
          nullable: true
          description: The current status of the card.
        CardType:
          type: integer
          format: int32
          nullable: true
          description: The type identifier of the card.
        CardUserIdentity:
          type: string
          nullable: true
          description: The unique identity or user ID associated with the card.
        UpdatedDt:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card was last updated.
        CreatedDt:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card was created.
        CreatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who created the card.
        UpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated the card.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the country associated with the card.
        Email:
          type: string
          nullable: true
          description: The email address associated with the card.
        CardPhysicalType:
          type: integer
          format: int32
          nullable: true
          description: The physical type identifier of the card.
        MemberType:
          type: integer
          format: int32
          nullable: true
          description: The membership type identifier associated with the card.
        CardActivationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card becomes active.
        CardExpirationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card expires.
        CardImageUrl:
          type: string
          nullable: true
          description: The URL of the image associated with the card.
        CardNote:
          type: string
          nullable: true
          description: Any additional notes associated with the card.
        wd_limits_money:
          type: string
          nullable: true
          description: The monetary limits applied to the card on specific weekdays.
        wd_limits_trans:
          type: string
          nullable: true
          description: The transaction limits applied to the card on specific weekdays.
        use_wd_limit:
          type: boolean
          nullable: true
          description: Indicates whether the weekday limits are enabled for the card.
        CardExternalApplicationUserID:
          type: string
          nullable: true
          description: The external application user ID associated with the card.
        Refs:
          type: object
          nullable: true
          description: Additional references or metadata associated with the card.
          additionalProperties:
            type: string
            nullable: true
      additionalProperties: false
    CardValue:
      type: object
      description: Represents the credit value associated with a card.
      properties:
        value:
          type: number
          format: double
          description: The credit value of the card.
      additionalProperties: false
    PrepaidCard:
      type: object
      description: Represents a prepaid card, including its associated details and entity data.
      properties:
        PrepaidCard:
          $ref: '#/components/schemas/PrepaidCardDbEntity'
          description: Detailed properties of the prepaid card.
        Card:
          $ref: '#/components/schemas/CardsDbEntity'
          description: The entity data associated with the card.
      additionalProperties: false
    PrepaidCardDbEntity:
      type: object
      description: Represents the detailed properties of a prepaid card, including credit attributes, usage limits, and revalue options.
      properties:
        CardID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the card.
        CardDiscountTypeBit:
          type: integer
          format: int32
          nullable: true
          description: Indicates the type of discount applied to the card.
        CardDiscountAmount:
          type: number
          format: double
          nullable: true
          description: The discount amount applied to the card.
        CardCreditTypeMoneyBit:
          type: boolean
          nullable: true
          description: Indicates whether the credit type is money.
        CardCreditAccumulateBit:
          type: boolean
          nullable: true
          description: Indicates whether the credit on the card can accumulate over time.
        CardCreditSingleUseBit:
          type: boolean
          nullable: true
          description: Indicates whether the credit on the card is for single-use only.
        CardRevalueCashBit:
          type: boolean
          nullable: true
          description: Indicates whether the card can be revalued with cash.
        CardRevalueCreditCardBit:
          type: boolean
          nullable: true
          description: Indicates whether the card can be revalued with a credit card.
        CardCredit:
          type: number
          format: double
          nullable: true
          description: The amount of credit available on the card.
        CardRevalueCredit:
          type: number
          format: double
          nullable: true
          description: The amount of credit added to the card during a revalue operation.
        CardMaxRevalueAmountLimit:
          type: number
          format: double
          nullable: true
          description: The maximum limit for revalue amounts.
        CreditAmountDailyLimit:
          type: number
          format: double
          nullable: true
          description: The daily limit on the amount of credit that can be used.
        CreditAmountWeeklyLimit:
          type: number
          format: double
          nullable: true
          description: The weekly limit on the amount of credit that can be used.
        CreditAmountMonthlyLimit:
          type: number
          format: double
          nullable: true
          description: The monthly limit on the amount of credit that can be used.
        CreditTransactionsDailyLimit:
          type: integer
          format: int32
          nullable: true
          description: The daily limit on the number of transactions that can be performed.
        CreditTransactionsWeeklyLimit:
          type: integer
          format: int32
          nullable: true
          description: The weekly limit on the number of transactions that can be performed.
        CreditTransactionsMonthlyLimit:
          type: integer
          format: int32
          nullable: true
          description: The monthly limit on the number of transactions that can be performed.
        CreditTransactionsMonthlyReload:
          type: integer
          format: int32
          nullable: true
          description: The number of transactions allowed per month for reloading the card.
        CreditAmountCapture:
          type: number
          format: double
          nullable: true
          description: The amount of credit captured.
        CreditTransactionsCapture:
          type: integer
          format: int32
          nullable: true
          description: The number of transactions captured.
        CreditCaptureDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time of the last capture.
        CreditAmountDailyUsage:
          type: number
          format: double
          nullable: true
          description: The amount of credit used daily.
        CreditAmountWeeklyUsage:
          type: number
          format: double
          nullable: true
          description: The amount of credit used weekly.
        CreditAmountMonthlyUsage:
          type: number
          format: double
          nullable: true
          description: The amount of credit used monthly.
        CreditAmountTotalUsage:
          type: number
          format: double
          nullable: true
          description: The total amount of credit used.
        CreditTransactionsDailyUsage:
          type: integer
          format: int32
          nullable: true
          description: The number of transactions performed daily.
        CreditTransactionsWeeklyUsage:
          type: integer
          format: int32
          nullable: true
          description: The number of transactions performed weekly.
        CreditTransactionsMonthlyUsage:
          type: integer
          format: int32
          nullable: true
          description: The number of transactions performed monthly.
        TransactionsTotalUsage:
          type: integer
          format: int64
          nullable: true
          description: The total number of transactions performed.
        CardRevalueExpirationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the revalue credit on the card expires.
        CardSetSingleUseDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card is set for single-use.
        RemoveSingleUseDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the single-use restriction is removed from the card.
        CreditAmountMonthlyReload:
          type: number
          format: double
          nullable: true
          description: The monthly reload amount for the card.
        CreditTransactionsTotalUsage:
          type: integer
          format: int32
          nullable: true
          description: The total number of credit transactions performed.
        CardCustomerTypeID:
          type: integer
          format: int32
          nullable: true
          description: The customer type identifier associated with the card.
        CardLastUpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated the card.
        CardLastUpdatedDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card was last updated.
        final_wd_limit_money:
          type: number
          format: double
          nullable: true
          description: The final weekday limit on the amount of money that can be used.
      additionalProperties: false
    CardsDbEntity:
      type: object
      description: Represents the entity details of a card, including its attributes, status, and associated actor information.
      properties:
        CardID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the card.
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the actor associated with the card.
        CardUniqueIdentifier:
          type: string
          nullable: true
          description: The unique identifier assigned to the card.
        CardDisplayNumber:
          type: string
          nullable: true
          description: The display number of the card.
        CardHolderName:
          type: string
          nullable: true
          description: The name of the cardholder.
        CardStatus:
          type: integer
          format: int32
          nullable: true
          description: The current status of the card.
        CardType:
          type: integer
          format: int32
          nullable: true
          description: The type identifier of the card.
        CardUserIdentity:
          type: string
          nullable: true
          description: The unique identity or user ID associated with the card.
        UpdatedDt:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card was last updated.
        CreatedDt:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card was created.
        CreatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who created the card.
        UpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated the card.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the country associated with the card.
        Email:
          type: string
          nullable: true
          description: The email address associated with the card.
        CardPhysicalType:
          type: integer
          format: int32
          nullable: true
          description: The physical type identifier of the card.
        MemberType:
          type: integer
          format: int32
          nullable: true
          description: The membership type identifier associated with the card.
        CardActivationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card becomes active.
        CardExpirationDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the card expires.
        CardImageUrl:
          type: string
          nullable: true
          description: The URL of the image associated with the card.
        CardNote:
          type: string
          nullable: true
          description: Any additional notes associated with the card.
        wd_limits_money:
          type: string
          nullable: true
          description: The monetary limits applied to the card on specific weekdays.
        wd_limits_trans:
          type: string
          nullable: true
          description: The transaction limits applied to the card on specific weekdays.
        use_wd_limit:
          type: boolean
          nullable: true
          description: Indicates whether the weekday limits are enabled for the card.
        CardExternalApplicationUserID:
          type: string
          nullable: true
          description: The external application user ID associated with the card.
      additionalProperties: false
    CardsMachineResponseModel:
      type: object
      description: Represents the response model for validating a prepaid or discount card for use with a specific machine, including machine and card details.
      properties:
        Machine:
          $ref: '#/components/schemas/MachineForCardResponseModel'
          description: Details about the machine involved in the validation.
        PrepaidCard:
          $ref: '#/components/schemas/PrepaidCardDbEntity'
          description: Details of the prepaid card being validated.
        Card:
          $ref: '#/components/schemas/CardsDbEntity'
          description: Details of the card being validated.
    MachineForCardResponseModel:
      type: object
      description: Represents the machine details related to the card validation process.
      properties:
        ActorID:
          type: integer
          format: int64
          description: The unique identifier of the actor associated with the machine.
        MachineID:
          type: integer
          format: int64
          description: The unique identifier of the machine.
        PurchaseAllowed:
          type: boolean
          description: Indicates whether purchases are allowed on the machine for the validated card.
      additionalProperties: false
    CardGroup:
      type: object
      description: Represents the group details associated with a card, including daily limits and update information.
      properties:
        CardGroupEnabledBit:
          type: boolean
          nullable: true
          description: Indicates whether the card group is enabled.
        GroupName:
          type: string
          nullable: true
          description: The name of the card group.
        CardGroupId:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the card group.
        GroupDailyLimit:
          type: integer
          format: int32
          nullable: true
          description: The daily limit for the card group.
        UpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated the group.
        LastUpdated:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the group was last updated.
      additionalProperties: false
    CardLastTransaction:
      type: object
      description: Represents the details of the last transaction made using a card.
      properties:
        AmountValue:
          type: number
          format: float
          description: The value of the transaction amount.
        MachineName:
          type: string
          nullable: true
          description: The name of the machine where the transaction was authorized.
        AuthorizationDate:
          type: string
          format: date-time
          description: The date and time when the transaction was authorized.
      additionalProperties: false
    CardStatus:
      type: integer
      format: int32
      description: Represents the status of a card.
      enum:
        - 1 # Active
        - 2 # Inactive
      example: 1
    CardCreateDto:
      type: object
      description: Represents the data required to create a new card, including details, holder information, credit attributes, and limits.
      properties:
        CardDetails:
          $ref: '#/components/schemas/CardDetailsCreate'
          description: Detailed information about the card being created.
        CardHolderDetails:
          $ref: '#/components/schemas/CardHolderDetailsUpdate'
          description: Information about the cardholder.
        CardCreditAttributes:
          $ref: '#/components/schemas/CardCreditAttributes'
          description: Attributes related to the card's credit, such as currency and limits.
        CardCreditLimits:
          $ref: '#/components/schemas/CardCreditLimits'
          description: Credit limits associated with the card.
        CardDateRules:
          $ref: '#/components/schemas/CardDateRules'
          description: Date-related rules for the card, including activation and expiration dates.
        CardRevalueRewardRules:
          type: array
          items:
            $ref: '#/components/schemas/CardRevalueRewardRuleUpdate'
          nullable: true
          description: Rules for revalue rewards associated with the card.
        GroupLocationLimits:
          type: array
          items:
            $ref: '#/components/schemas/CardGroupLocationLimitUpdate'
          nullable: true
          description: Location-based limits for the card groups.
      additionalProperties: false
    CardDetailsCreate:
      type: object
      description: Represents the basic details required to create a card.
      properties:
        ActorID:
          type: integer
          format: int64
          description: The unique identifier of the actor associated with the card.
        CardUniqueIdentifier:
          type: string
          nullable: true
          description: The unique identifier assigned to the card.
        CardDisplayNumber:
          type: string
          nullable: true
          description: The display number of the card.
        CardTypeID:
          type: integer
          format: int32
          nullable: true
          description: The type identifier of the card.
        PhysicalTypeID:
          type: integer
          format: int32
          nullable: true
          description: The physical type identifier of the card.
        Notes:
          type: string
          nullable: true
          description: Any additional notes related to the card.
        Status:
          type: integer
          format: int32
          nullable: true
          description: The status identifier of the card.
        ExternalApplicationUserID:
          type: string
          nullable: true
          description: The external application user ID associated with the card.
      additionalProperties: false
    CardHolderDetailsUpdate:
      type: object
      description: Represents the details of the cardholder to be updated or created.
      properties:
        CardHolderName:
          type: string
          nullable: true
          description: The name of the cardholder.
        UserIdentity:
          type: string
          nullable: true
          description: The unique identity or user ID of the cardholder.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The country identifier associated with the cardholder.
        MobileNumber:
          type: string
          nullable: true
          description: The mobile number of the cardholder.
        Email:
          type: string
          nullable: true
          description: The email address of the cardholder.
        MemberTypeID:
          type: integer
          format: int32
          nullable: true
          description: The membership type identifier associated with the cardholder.
      additionalProperties: false
    CardRevalueRewardRuleUpdate:
      type: object
      description: Represents the rules for revalue rewards associated with a card.
      properties:
        RuleID:
          type: integer
          format: int32
          description: The unique identifier of the reward rule.
        RewardActorID:
          type: integer
          format: int64
          description: The unique identifier of the actor associated with the reward.
        Status:
          type: boolean
          description: The status of the reward rule (e.g., active or inactive).
        RevalueAmount:
          type: number
          format: double
          description: The amount required to trigger the reward.
        RewardValueTypeBit:
          type: boolean
          description: Indicates whether the reward is a fixed amount or percentage.
        RewardValue:
          type: number
          format: double
          description: The value of the reward.
      additionalProperties: false
    CardGroupLocationLimitUpdate:
      type: object
      description: Represents the location-based limits for a card group, including daily limits.
      properties:
        CardGroupEnabledBit:
          type: boolean
          description: Indicates whether the card group is enabled.
        GroupName:
          type: string
          nullable: true
          description: The name of the card group.
        CardGroupId:
          type: integer
          format: int64
          description: The unique identifier of the card group.
        GroupDailyLimit:
          type: integer
          format: int32
          nullable: true
          description: The daily limit for the card group.
      additionalProperties: false
    CardUpdateDto:
      type: object
      description: Represents the data required to update an existing card, including details, holder information, credit attributes, and limits.
      properties:
        CardDetails:
          $ref: '#/components/schemas/CardDetailsUpdate'
          description: Updated details about the card.
        CardHolderDetails:
          $ref: '#/components/schemas/CardHolderDetailsUpdate'
          description: Updated information about the cardholder.
        CardCreditAttributes:
          $ref: '#/components/schemas/CardCreditAttributes'
          description: Updated credit attributes associated with the card.
        CardCreditLimits:
          $ref: '#/components/schemas/CardCreditLimits'
          description: Updated credit limits associated with the card.
        CardDateRules:
          $ref: '#/components/schemas/CardDateRules'
          description: Updated date-related rules for the card.
        CardRevalueRewardRules:
          type: array
          items:
            $ref: '#/components/schemas/CardRevalueRewardRuleUpdate'
          nullable: true
          description: Updated rules for revalue rewards associated with the card.
        GroupLocationLimits:
          type: array
          items:
            $ref: '#/components/schemas/CardGroupLocationLimitUpdate'
          nullable: true
          description: Updated location-based limits for the card groups.
      additionalProperties: false
    CardDetailsUpdate:
      type: object
      description: Represents the details required to update an existing card.
      properties:
        ActorID:
          type: integer
          format: int64
          description: The unique identifier of the actor associated with the card.
        CardDisplayNumber:
          type: string
          nullable: true
          description: The display number of the card.
        PhysicalTypeID:
          type: integer
          format: int32
          nullable: true
          description: The physical type identifier of the card.
        Notes:
          type: string
          nullable: true
          description: Any additional notes related to the card.
        Status:
          type: integer
          format: int32
          nullable: true
          description: The status identifier of the card.
        ExternalApplicationUserID:
          type: string
          nullable: true
          description: The external application user ID associated with the card.
      additionalProperties: false
    CertificateResponse:
      type: object
      description: Represents the response containing details about a CA certificate for a retail terminal.
      properties:
        DeviceSerial:
          type: string
          nullable: true
          description: The serial number of the device associated with the certificate.
        CertificateStatus:
          type: boolean
          description: Indicates whether the certificate is active (true) or inactive (false).
        PfxBase64:
          type: string
          nullable: true
          description: The CA certificate in Base64-encoded PFX format.
      additionalProperties: false
    CertificateInstallationRequest:
      type: object
      description: Represents the request to update the installation status of a device's CA certificate.
      properties:
        DeviceSerial:
          type: string
          nullable: true
          description: The serial number of the device for which the installation status is being set.
        CertificateInstallationStatus:
          type: boolean
          description: Indicates whether the CA certificate installation was successful (true) or not (false).
      additionalProperties: false
    ActorMerchantInfo:
      type: object
      description: Contains detailed information about an actor's merchant and invoice details, including contact information, address, and payment settings.
      properties:
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the actor.
        InvoiceCompanyName:
          type: string
          nullable: true
          description: The name of the company associated with the invoice.
        CompanyTaxID:
          type: string
          nullable: true
          description: The tax identification number of the company.
        IsVat:
          type: boolean
          nullable: true
          description: Indicates if VAT is applicable.
        CurrencyID:
          type: integer
          format: int32
          nullable: true
          description: The currency identifier for transactions.
        CompanyEmail:
          type: string
          nullable: true
          description: The email address of the company.
        CompanyContactName:
          type: string
          nullable: true
          description: The name of the company contact person.
        CountryID:
          type: integer
          format: int32
          nullable: true
          description: The country identifier of the company.
        StateID:
          type: string
          nullable: true
          description: The state or region identifier of the company.
        CityID:
          type: integer
          format: int32
          nullable: true
          description: The city identifier of the company.
        CityName:
          type: string
          nullable: true
          description: The name of the city where the company is located.
        CompanyAddress:
          type: string
          nullable: true
          description: The full address of the company.
        ZipCode:
          type: string
          nullable: true
          description: The postal or zip code of the company's address.
        ReimbursementFrequency:
          type: integer
          format: int32
          nullable: true
          description: The frequency at which reimbursements are made.
        ReimbursementDay:
          type: integer
          format: int32
          nullable: true
          description: The day of the month for reimbursements.
        InvoiceMethodOfPayment:
          type: integer
          format: int32
          nullable: true
          description: The payment method used for invoices.
        ReimbursementEntity:
          type: integer
          format: int32
          nullable: true
          description: The entity responsible for reimbursements.
        ReimburesementEnableBit:
          type: boolean
          nullable: true
          description: Indicates if reimbursements are enabled.
        InvoiceEnableBit:
          type: boolean
          nullable: true
          description: Indicates if invoicing is enabled.
        ReportFormat:
          type: string
          nullable: true
          description: The format of reports generated for the company.
        InvoiceLanguageID:
          type: integer
          format: int32
          nullable: true
          description: The language identifier used for invoices.
        InvoiceReportType:
          type: integer
          format: int32
          nullable: true
          description: The report type identifier for invoices.
        ContactMobilePhoneNumber:
          type: string
          nullable: true
          description: The mobile phone number of the company contact person.
        ContactPhoneNumber:
          type: string
          nullable: true
          description: The phone number of the company contact person.
        ShippingCountryID:
          type: string
          nullable: true
          description: The country identifier for the shipping address.
        ShippingCityID:
          type: string
          nullable: true
          description: The city identifier for the shipping address.
        ShippingCityName:
          type: string
          nullable: true
          description: The name of the city for the shipping address.
        ShippingZipCode:
          type: string
          nullable: true
          description: The postal or zip code for the shipping address.
        ShippingStateID:
          type: string
          nullable: true
          description: The state or region identifier for the shipping address.
        CountryDialingCode:
          type: integer
          format: int32
          nullable: true
          description: The dialing code for the company's country.
        MobileCountryDialingCode:
          type: integer
          format: int32
          nullable: true
          description: The dialing code for the company's mobile country.
        ShippingAddress:
          type: string
          nullable: true
          description: The full shipping address of the company.
        UseBillingAddressForShippingBit:
          type: boolean
          nullable: true
          description: Indicates if the billing address should be used for shipping.
        RebateEnableBit:
          type: boolean
          nullable: true
          description: Indicates if rebates are enabled.
        CompanyOtherCityName:
          type: string
          nullable: true
          description: The name of the city if different from the main city listed.
        SAPCustomerID:
          type: string
          nullable: true
          description: The SAP customer ID associated with the company.
        RemoveServiceVATBit:
          type: boolean
          nullable: true
          description: Indicates if service VAT is removed.
        KYCPassBit:
          type: boolean
          nullable: true
          description: Indicates if the company has passed KYC (Know Your Customer) checks.
        InvoiceSAPCustomerID:
          type: string
          nullable: true
          description: The SAP customer ID used for invoicing.
        ReimburesementSAPCustomerID:
          type: string
          nullable: true
          description: The SAP customer ID used for reimbursements.
        StopPaymentBit:
          type: boolean
          nullable: true
          description: Indicates if payments are stopped for the company.
        RemovedStopPaymentDateTime:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the stop payment was removed.
        CustomerStatusID:
          type: integer
          format: int32
          nullable: true
          description: The status identifier of the customer.
        AmexSellerID:
          type: string
          nullable: true
          description: The American Express seller ID associated with the company.
        AmexSeNumber:
          type: string
          nullable: true
          description: The American Express SE number associated with the company.
        MCCCode:
          type: string
          nullable: true
          description: The Merchant Category Code (MCC) for the company.
        PayoutEntityID:
          type: integer
          format: int32
          nullable: true
          description: The entity identifier responsible for payouts.
        ServiceReportFormat:
          type: string
          nullable: true
          description: The format of service reports generated for the company.
        ServicePaymentMethod:
          type: integer
          format: int32
          nullable: true
          description: The payment method used for services.
        ReimbursementReportFormat:
          type: string
          nullable: true
          description: The format of reimbursement reports generated for the company.
        IsMerchantAccount:
          type: boolean
          nullable: true
          description: Indicates if the account is a merchant account.
        ErpIdentifier:
          type: string
          nullable: true
          description: The ERP identifier associated with the company.
      additionalProperties: false
    DeviceExtra:
      type: object
      description: Contains detailed information about a device, including hardware, software versions, and operational status.
      properties:
        VposChipId:
          type: string
          nullable: true
          description: The unique identifier for the VPOS chip in the device.
        IsDeviceExists:
          type: boolean
          description: Indicates whether the device exists in the system.
        FWVersionNumber:
          type: string
          nullable: true
          description: The firmware version number of the device.
        VposVersionNumber:
          type: string
          nullable: true
          description: The VPOSS version number installed on the device.
        DeviceID:
          type: integer
          format: int32
          nullable: true
          description: The unique identifier of the device.
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the actor associated with the device.
        DeviceTypeLutID:
          type: integer
          format: int32
          nullable: true
          description: The lookup identifier for the device type.
        DeviceSerial:
          type: string
          nullable: true
          description: The serial number of the device.
        IMEI:
          type: string
          nullable: true
          description: The International Mobile Equipment Identity number of the device.
        DeviceDescription:
          type: string
          nullable: true
          description: A brief description of the device.
        SimCardID:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the SIM card associated with the device.
        FWVersionID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the firmware version installed on the device.
        RequestedFwID:
          type: integer
          format: int64
          nullable: true
          description: The identifier for the requested firmware update.
        PollInterval:
          type: integer
          format: int64
          nullable: true
          description: The polling interval for the device in seconds.
        StatusID:
          type: integer
          format: int32
          nullable: true
          description: The current status identifier of the device.
        LastUpdated:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the device was last updated.
        IsCollectMultipleParameters:
          type: boolean
          nullable: true
          description: Indicates if the device is set to collect multiple parameters.
        IsLogged:
          type: boolean
          nullable: true
          description: Indicates if the device activity is logged.
        FRequestedNewVersionDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when a new firmware version was requested for the device.
        FTookNewVersionDate:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the new firmware version was applied to the device.
        HardwareVersion:
          type: string
          nullable: true
          description: The hardware version of the device.
        IsRental:
          type: boolean
          nullable: true
          description: Indicates if the device is rented.
        RentalEndMonth:
          type: integer
          format: int32
          nullable: true
          description: The month when the device rental period ends.
        RentalEndYear:
          type: integer
          format: int32
          nullable: true
          description: The year when the device rental period ends.
        IsToBeReturned:
          type: boolean
          nullable: true
          description: Indicates if the device is scheduled to be returned.
        FeeCommunicationThreshold:
          type: integer
          format: int32
          nullable: true
          description: The communication fee threshold for the device.
        BillingPlanID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the billing plan associated with the device.
        BillingPlanActivationDate:
          type: string
          format: date-time
          nullable: true
          description: The date when the billing plan was activated for the device.
        DeviceCreationDate:
          type: string
          format: date-time
          nullable: true
          description: The date when the device was created in the system.
        CreatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who created the device entry.
        UpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated the device entry.
        DistributorBillingPlanID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the distributor billing plan associated with the device.
        ChipID:
          type: string
          nullable: true
          description: The unique identifier for the chip in the device.
        OrderID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the order associated with the device.
        ExternalFlashSize:
          type: integer
          format: int32
          nullable: true
          description: The size of the external flash memory in the device.
        BoardSerial:
          type: string
          nullable: true
          description: The serial number of the device's mainboard.
        FlashSize:
          type: integer
          format: int32
          nullable: true
          description: The size of the internal flash memory in the device.
        DeviceFamily:
          type: string
          nullable: true
          description: The family classification of the device.
        ModemModel:
          type: string
          nullable: true
          description: The model of the modem installed in the device.
        TrialEndDate:
          type: string
          format: date-time
          nullable: true
          description: The date when the device's trial period ends.
        VerticalTypeID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the vertical type associated with the device.
        VerticalProductTypeID:
          type: integer
          format: int32
          nullable: true
          description: The identifier of the vertical product type associated with the device.
        VerticalTypeLutID:
          type: integer
          format: int32
          nullable: true
          description: The lookup identifier for the vertical type.
        VerticalProductTypeLutID:
          type: integer
          format: int32
          nullable: true
          description: The lookup identifier for the vertical product type.
        Refs:
          type: object
          nullable: true
          description: A collection of additional references associated with the device.
          additionalProperties:
            type: string
            nullable: true
      additionalProperties: false
    DevicesUpdateDto:
      type: object
      description: Contains data required to update a device's information, including actor and status details.
      properties:
        ActorID:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the actor associated with the device.
        StatusID:
          type: integer
          format: int32
          nullable: true
          description: The status identifier of the device.
      additionalProperties: false
    DevicesInsertHistoryDto:
      type: object
      description: Represents a data transfer object used to insert a history record for a device, detailing changes made to the device.
      properties:
        ChangedFrom:
          type: string
          nullable: true
          description: The previous state or value before the change was made.
        ChangedTo:
          type: string
          nullable: true
          description: The new state or value after the change was made.
        ChangedByUser:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who made the change.
        UpdatedAt:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the change was made and recorded.
      additionalProperties: false
    DevicesMoveResponse:
      type: object
      description: Represents the response returned after moving devices to a specified actor, including details about the device and its new association.
      properties:
        HW_serial:
          type: string
          nullable: true
          description: The hardware serial number of the device that was moved.
        actor_id:
          type: integer
          format: int64
          description: The unique identifier of the actor to which the device is now associated.
        is_connected:
          type: boolean
          description: Indicates whether the device is currently connected after being moved.
      additionalProperties: false
    FirmwareVersionResponseDTO:
      type: object
      description: Represents the details of a firmware version, including metadata, compatibility information, and file details.
      properties:
        FirmwareVersionID:
          type: integer
          format: int64
          nullable: true
          description: The unique identifier of the firmware version.
        FirmwareVersionNumber:
          type: string
          nullable: true
          description: The version number of the firmware.
        FirmwareDescription:
          type: string
          nullable: true
          description: A brief description of the firmware version and its features or changes.
        FirmwareVersionIssueDate:
          type: string
          format: date-time
          nullable: true
          description: The date when the firmware version was issued or released.
        FirmwareVersionExpirationDate:
          type: string
          format: date-time
          nullable: true
          description: The expiration date of the firmware version, if applicable.
        FirmwareVersionFile:
          type: string
          nullable: true
          description: The file path or name of the firmware version file.
        FirmwareVersionSizeLutID:
          type: integer
          format: int64
          nullable: true
          description: The lookup identifier representing the size category of the firmware version.
        UpdatedDT:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the firmware version was last updated.
        SupportDataVolumeBit:
          type: boolean
          nullable: true
          description: Indicates whether the firmware version supports data volume management.
        StatusID:
          type: integer
          format: int32
          nullable: true
          description: The status identifier of the firmware version, indicating its current state (e.g., active, deprecated).
        SupportedPlatforms:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
          description: A list of platform identifiers that are compatible with the firmware version.
        CreatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who created the firmware version record.
        CreatedDT:
          type: string
          format: date-time
          nullable: true
          description: The date and time when the firmware version record was created.
        UpdatedBy:
          type: integer
          format: int64
          nullable: true
          description: The identifier of the user who last updated the firmware version record.
        SupportFTPBit:
          type: boolean
          nullable: true
          description: Indicates whether the firmware version supports FTP for data transfer.
        MinFlashSizeLutID:
          type: integer
          format: int32
          nullable: true
          description: The minimum flash size required for this firmware version, represented by a lookup identifier.
        ExternalFlashSize:
          type: integer
          format: int32
          nullable: true
          description: The size of external flash memory required for the firmware version.
        SupportedPOSVersions:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
          description: A list of POS (Point of Sale) version identifiers that are compatible with this firmware version.
        MainMCUTypeId:
          type: string
          nullable: true
          description: The identifier for the main MCU (Microcontroller Unit) type that the firmware is compatible with.
        MainFlashTypeId:
          type: string
          nullable: true
          description: The identifier for the main flash memory type that the firmware is compatible with.
        FirmwareType:
          type: integer
          format: int32
          nullable: true
          description: The type of firmware, represented by an integer identifier.
        MaxCommunicationSize:
          type: integer
          format: int32
          nullable: true
          description: The maximum communication size supported by this firmware version.
        MainFilePath:
          type: string
          nullable: true
          description: The file path to the main firmware file.
        MainFilePassword:
          type: string
          nullable: true
          description: The password required to access the main firmware file, if applicable.
        MainFileCrc:
          type: string
          nullable: true
          description: The CRC (Cyclic Redundancy Check) value of the main firmware file for integrity verification.
      additionalProperties: false
    FirmwareVersionRequestDTO:
      type: object
      description: Represents the data required to create or update a firmware version, including metadata, compatibility information, and file details.
      properties:
        FirmwareVersionNumber:
          type: string
          nullable: true
          description: The version number assigned to the firmware.
        FirmwareDescription:
          type: string
          nullable: true
          description: A brief description of the firmware version, detailing its features or changes.
        FirmwareVersionIssueDate:
          type: string
          format: date-time
          nullable: true
          description: The date when the firmware version was issued or released.
        FirmwareVersionExpirationDate:
          type: string
          format: date-time
          nullable: true
          description: The expiration date for the firmware version, if applicable.
        FirmwareVersionSizeLutID:
          type: integer
          format: int64
          nullable: true
          description: The lookup identifier representing the size category of the firmware version.
        SupportDataVolumeBit:
          type: boolean
          nullable: true
          description: Indicates whether the firmware version supports data volume management.
        StatusID:
          type: integer
          format: int32
          nullable: true
          description: The status identifier of the firmware version, indicating its current state (e.g., active, deprecated).
        SupportedPlatforms:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
          description: A list of platform identifiers that are compatible with the firmware version.
        SupportFTPBit:
          type: boolean
          nullable: true
          description: Indicates whether the firmware version supports FTP for data transfer.
        MinFlashSizeLutID:
          type: integer
          format: int32
          nullable: true
          description: The minimum flash size required for this firmware version, represented by a lookup identifier.
        ExternalFlashSize:
          type: integer
          format: int32
          nullable: true
          description: The size of external flash memory required for the firmware version.
        SupportedPOSVersions:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
          description: A list of POS (Point of Sale) version identifiers that are compatible with this firmware version.
        MainMCUTypeId:
          type: string
          nullable: true
          description: The identifier for the main MCU (Microcontroller Unit) type that the firmware is compatible with.
        MainFlashTypeId:
          type: string
          nullable: true
          description: The identifier for the main flash memory type that the firmware is compatible with.
        FirmwareType:
          type: integer
          format: int32
          nullable: true
          description: The type of firmware, represented by an integer identifier.
        MaxCommunicationSize:
          type: integer
          format: int32
          description: The maximum communication size supported by this firmware version.
        MainFilePath:
          type: string
          nullable: true
          description: The file path to the main firmware file.
        MainFilePassword:
          type: string
          nullable: true
          description: The password required to access the main firmware file, if applicable.
        MainFileCrc:
          type: string
          nullable: true
          description: The CRC (Cyclic Redundancy Check) value of the main firmware file for integrity verification.
      additionalProperties: false


























