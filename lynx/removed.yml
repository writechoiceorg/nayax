paths:
  /v1/certificates/{boardSerial}:
      get:
        tags:
          - Certificates
        summary: Get CA Certificate for Retail Terminal
        description: Retrieves the CA certificate associated with a retail terminal identified by its board serial number.
        operationId: get-ca-certificate-for-terminal
        parameters:
          - name: boardSerial
            in: path
            required: true
            description: The serial number of the board for which the CA certificate is to be retrieved.
            schema:
              type: string
        responses:
          '200':
            description: CA certificate retrieved successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CertificateResponse'
      post:
        tags:
          - Certificates
        summary: Create CA Certificate for Retail Terminal
        description: Generates and assigns a CA certificate for a retail terminal identified by its board serial number.
        operationId: create-ca-certificate-for-terminal
        parameters:
          - name: boardSerial
            in: path
            required: true
            description: The serial number of the board for which the CA certificate is to be created.
            schema:
              type: string
        responses:
          '200':
            description: CA certificate created successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CertificateResponse'
  /v1/certificates/{boardSerial}/renew:
    post:
      tags:
        - Certificates
      summary: Renew CA Certificate for Retail Terminals
      description: Renews the CA certificate for a retail terminal identified by its board serial number.
      operationId: renew-ca-certificate-for-terminal
      parameters:
        - name: boardSerial
          in: path
          required: true
          description: The serial number of the board for which the CA certificate is to be renewed.
          schema:
            type: string
      responses:
        '200':
          description: CA certificate renewed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateResponse'
  /v1/certificates/{boardSerial}/revoke:
    post:
      tags:
        - Certificates
      summary: Revoke CA Certificate for Retail Terminals
      description: Revokes the CA certificate for a retail terminal identified by its board serial number.
      operationId: revoke-ca-certificate-for-terminal
      parameters:
        - name: boardSerial
          in: path
          required: true
          description: The serial number of the board for which the CA certificate is to be revoked.
          schema:
            type: string
      responses:
        '200':
          description: CA certificate revoked successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
  /v1/certificates/installationStatus:
    post:
      tags:
        - Certificates
      summary: Set device installation status
      description: Updates the installation status of a device after a CA certificate has been installed.
      operationId: set-device-installation-status
      requestBody:
        required: true
        description: The installation status details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateInstallationRequest'
      responses:
        '200':
          description: Device installation status updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResult'
  /v1/programmer/devices:
    get:
      tags:
      - Programmer
      summary: Get Devices
      description: Retrieves information about a device based on various query parameters such as DeviceId, DeviceSerial, DeviceChipId, and MainBoardSerial. This endpoint can also check if a device exists.
      operationId: get-device
      parameters:
      - name: DeviceId
        in: query
        description: The unique identifier of the device.
        schema:
          type: integer
          format: int32
      - name: DeviceSerial
        in: query
        description: The serial number of the device.
        schema:
          type: string
      - name: DeviceChipId
        in: query
        description: The chip identifier of the device.
        schema:
          type: string
      - name: MainBoardSerial
        in: query
        description: The serial number of the mainboard in the device.
        schema:
          type: string
      - name: CheckExist
        in: query
        description: Indicates whether to check if the device exists.
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: The details of the specified device.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeviceExtra"
  /v1/programmer/devices/{DeviceSerial}:
    put:
      tags:
      - Programmer
      summary: Update Device for Programmer
      description: Updates the details of a device identified by its DeviceSerial for programming purposes. The request body contains the updated device information.
      operationId: update-device-for-programmer
      parameters:
      - name: DeviceSerial
        in: path
        description: The serial number of the device to be updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProgrammerUpdate"
      responses:
        '200':
          description: The updated details of the specified device.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DevicesDbEntity"
  /v1/programmer/devices/{DeviceSerial}/encryptionKey:
    get:
      tags:
      - Programmer
      summary: Get Device Encryption Key
      description: Retrieves the encryption key associated with a specific device, identified by its DeviceSerial.
      operationId: get-device-encryption-key
      parameters:
      - name: DeviceSerial
        in: path
        description: The serial number of the device for which the encryption key is requested.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The encryption key for the specified device.
          content:
            application/json:
              schema:
                type: string
  